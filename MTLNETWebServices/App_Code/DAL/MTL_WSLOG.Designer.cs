//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace MTLNETWebServices.App_Code.DAL {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("MTL_WSLOG")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class MTL_WSLOG : global::System.Data.DataSet {
        
        private WSLogDataTable tableWSLog;
        
        private RefRunningTBDataTable tableRefRunningTB;
        
        private RefRunningTBForCounterServiceDataTable tableRefRunningTBForCounterService;
        
        private WSLogForCounterServiceDataTable tableWSLogForCounterService;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public MTL_WSLOG() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected MTL_WSLOG(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["WSLog"] != null)) {
                    base.Tables.Add(new WSLogDataTable(ds.Tables["WSLog"]));
                }
                if ((ds.Tables["RefRunningTB"] != null)) {
                    base.Tables.Add(new RefRunningTBDataTable(ds.Tables["RefRunningTB"]));
                }
                if ((ds.Tables["RefRunningTBForCounterService"] != null)) {
                    base.Tables.Add(new RefRunningTBForCounterServiceDataTable(ds.Tables["RefRunningTBForCounterService"]));
                }
                if ((ds.Tables["WSLogForCounterService"] != null)) {
                    base.Tables.Add(new WSLogForCounterServiceDataTable(ds.Tables["WSLogForCounterService"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public WSLogDataTable WSLog {
            get {
                return this.tableWSLog;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public RefRunningTBDataTable RefRunningTB {
            get {
                return this.tableRefRunningTB;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public RefRunningTBForCounterServiceDataTable RefRunningTBForCounterService {
            get {
                return this.tableRefRunningTBForCounterService;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public WSLogForCounterServiceDataTable WSLogForCounterService {
            get {
                return this.tableWSLogForCounterService;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            MTL_WSLOG cln = ((MTL_WSLOG)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["WSLog"] != null)) {
                    base.Tables.Add(new WSLogDataTable(ds.Tables["WSLog"]));
                }
                if ((ds.Tables["RefRunningTB"] != null)) {
                    base.Tables.Add(new RefRunningTBDataTable(ds.Tables["RefRunningTB"]));
                }
                if ((ds.Tables["RefRunningTBForCounterService"] != null)) {
                    base.Tables.Add(new RefRunningTBForCounterServiceDataTable(ds.Tables["RefRunningTBForCounterService"]));
                }
                if ((ds.Tables["WSLogForCounterService"] != null)) {
                    base.Tables.Add(new WSLogForCounterServiceDataTable(ds.Tables["WSLogForCounterService"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableWSLog = ((WSLogDataTable)(base.Tables["WSLog"]));
            if ((initTable == true)) {
                if ((this.tableWSLog != null)) {
                    this.tableWSLog.InitVars();
                }
            }
            this.tableRefRunningTB = ((RefRunningTBDataTable)(base.Tables["RefRunningTB"]));
            if ((initTable == true)) {
                if ((this.tableRefRunningTB != null)) {
                    this.tableRefRunningTB.InitVars();
                }
            }
            this.tableRefRunningTBForCounterService = ((RefRunningTBForCounterServiceDataTable)(base.Tables["RefRunningTBForCounterService"]));
            if ((initTable == true)) {
                if ((this.tableRefRunningTBForCounterService != null)) {
                    this.tableRefRunningTBForCounterService.InitVars();
                }
            }
            this.tableWSLogForCounterService = ((WSLogForCounterServiceDataTable)(base.Tables["WSLogForCounterService"]));
            if ((initTable == true)) {
                if ((this.tableWSLogForCounterService != null)) {
                    this.tableWSLogForCounterService.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "MTL_WSLOG";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/MTL_WSLOG.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableWSLog = new WSLogDataTable();
            base.Tables.Add(this.tableWSLog);
            this.tableRefRunningTB = new RefRunningTBDataTable();
            base.Tables.Add(this.tableRefRunningTB);
            this.tableRefRunningTBForCounterService = new RefRunningTBForCounterServiceDataTable();
            base.Tables.Add(this.tableRefRunningTBForCounterService);
            this.tableWSLogForCounterService = new WSLogForCounterServiceDataTable();
            base.Tables.Add(this.tableWSLogForCounterService);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeWSLog() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeRefRunningTB() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeRefRunningTBForCounterService() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeWSLogForCounterService() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            MTL_WSLOG ds = new MTL_WSLOG();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void WSLogRowChangeEventHandler(object sender, WSLogRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void RefRunningTBRowChangeEventHandler(object sender, RefRunningTBRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void RefRunningTBForCounterServiceRowChangeEventHandler(object sender, RefRunningTBForCounterServiceRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void WSLogForCounterServiceRowChangeEventHandler(object sender, WSLogForCounterServiceRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class WSLogDataTable : global::System.Data.TypedTableBase<WSLogRow> {
            
            private global::System.Data.DataColumn columnrid;
            
            private global::System.Data.DataColumn columnPartner;
            
            private global::System.Data.DataColumn columnIPaddress;
            
            private global::System.Data.DataColumn columnAction;
            
            private global::System.Data.DataColumn columnLogDateTime;
            
            private global::System.Data.DataColumn columnWSName;
            
            private global::System.Data.DataColumn columnWSMethod;
            
            private global::System.Data.DataColumn columnDetail;
            
            private global::System.Data.DataColumn columnRefRow;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public WSLogDataTable() {
                this.TableName = "WSLog";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal WSLogDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected WSLogDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ridColumn {
                get {
                    return this.columnrid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PartnerColumn {
                get {
                    return this.columnPartner;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IPaddressColumn {
                get {
                    return this.columnIPaddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ActionColumn {
                get {
                    return this.columnAction;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LogDateTimeColumn {
                get {
                    return this.columnLogDateTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WSNameColumn {
                get {
                    return this.columnWSName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WSMethodColumn {
                get {
                    return this.columnWSMethod;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DetailColumn {
                get {
                    return this.columnDetail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RefRowColumn {
                get {
                    return this.columnRefRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public WSLogRow this[int index] {
                get {
                    return ((WSLogRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event WSLogRowChangeEventHandler WSLogRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event WSLogRowChangeEventHandler WSLogRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event WSLogRowChangeEventHandler WSLogRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event WSLogRowChangeEventHandler WSLogRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddWSLogRow(WSLogRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public WSLogRow AddWSLogRow(string Partner, string IPaddress, string Action, System.DateTime LogDateTime, string WSName, string WSMethod, string Detail, int RefRow) {
                WSLogRow rowWSLogRow = ((WSLogRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Partner,
                        IPaddress,
                        Action,
                        LogDateTime,
                        WSName,
                        WSMethod,
                        Detail,
                        RefRow};
                rowWSLogRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowWSLogRow);
                return rowWSLogRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public WSLogRow FindByrid(int rid) {
                return ((WSLogRow)(this.Rows.Find(new object[] {
                            rid})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                WSLogDataTable cln = ((WSLogDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new WSLogDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnrid = base.Columns["rid"];
                this.columnPartner = base.Columns["Partner"];
                this.columnIPaddress = base.Columns["IPaddress"];
                this.columnAction = base.Columns["Action"];
                this.columnLogDateTime = base.Columns["LogDateTime"];
                this.columnWSName = base.Columns["WSName"];
                this.columnWSMethod = base.Columns["WSMethod"];
                this.columnDetail = base.Columns["Detail"];
                this.columnRefRow = base.Columns["RefRow"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnrid = new global::System.Data.DataColumn("rid", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrid);
                this.columnPartner = new global::System.Data.DataColumn("Partner", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPartner);
                this.columnIPaddress = new global::System.Data.DataColumn("IPaddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIPaddress);
                this.columnAction = new global::System.Data.DataColumn("Action", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAction);
                this.columnLogDateTime = new global::System.Data.DataColumn("LogDateTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLogDateTime);
                this.columnWSName = new global::System.Data.DataColumn("WSName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWSName);
                this.columnWSMethod = new global::System.Data.DataColumn("WSMethod", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWSMethod);
                this.columnDetail = new global::System.Data.DataColumn("Detail", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDetail);
                this.columnRefRow = new global::System.Data.DataColumn("RefRow", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRefRow);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnrid}, true));
                this.columnrid.AutoIncrement = true;
                this.columnrid.AutoIncrementSeed = -1;
                this.columnrid.AutoIncrementStep = -1;
                this.columnrid.AllowDBNull = false;
                this.columnrid.ReadOnly = true;
                this.columnrid.Unique = true;
                this.columnPartner.MaxLength = 100;
                this.columnIPaddress.AllowDBNull = false;
                this.columnIPaddress.MaxLength = 50;
                this.columnAction.MaxLength = 50;
                this.columnLogDateTime.AllowDBNull = false;
                this.columnWSName.MaxLength = 100;
                this.columnWSMethod.MaxLength = 100;
                this.columnDetail.MaxLength = 500;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public WSLogRow NewWSLogRow() {
                return ((WSLogRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new WSLogRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(WSLogRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.WSLogRowChanged != null)) {
                    this.WSLogRowChanged(this, new WSLogRowChangeEvent(((WSLogRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.WSLogRowChanging != null)) {
                    this.WSLogRowChanging(this, new WSLogRowChangeEvent(((WSLogRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.WSLogRowDeleted != null)) {
                    this.WSLogRowDeleted(this, new WSLogRowChangeEvent(((WSLogRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.WSLogRowDeleting != null)) {
                    this.WSLogRowDeleting(this, new WSLogRowChangeEvent(((WSLogRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveWSLogRow(WSLogRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MTL_WSLOG ds = new MTL_WSLOG();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "WSLogDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class RefRunningTBDataTable : global::System.Data.TypedTableBase<RefRunningTBRow> {
            
            private global::System.Data.DataColumn columnrid;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RefRunningTBDataTable() {
                this.TableName = "RefRunningTB";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal RefRunningTBDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected RefRunningTBDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ridColumn {
                get {
                    return this.columnrid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RefRunningTBRow this[int index] {
                get {
                    return ((RefRunningTBRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event RefRunningTBRowChangeEventHandler RefRunningTBRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event RefRunningTBRowChangeEventHandler RefRunningTBRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event RefRunningTBRowChangeEventHandler RefRunningTBRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event RefRunningTBRowChangeEventHandler RefRunningTBRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddRefRunningTBRow(RefRunningTBRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RefRunningTBRow AddRefRunningTBRow() {
                RefRunningTBRow rowRefRunningTBRow = ((RefRunningTBRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null};
                rowRefRunningTBRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowRefRunningTBRow);
                return rowRefRunningTBRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RefRunningTBRow FindByrid(int rid) {
                return ((RefRunningTBRow)(this.Rows.Find(new object[] {
                            rid})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                RefRunningTBDataTable cln = ((RefRunningTBDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new RefRunningTBDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnrid = base.Columns["rid"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnrid = new global::System.Data.DataColumn("rid", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrid);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnrid}, true));
                this.columnrid.AutoIncrement = true;
                this.columnrid.AutoIncrementSeed = -1;
                this.columnrid.AutoIncrementStep = -1;
                this.columnrid.AllowDBNull = false;
                this.columnrid.ReadOnly = true;
                this.columnrid.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RefRunningTBRow NewRefRunningTBRow() {
                return ((RefRunningTBRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new RefRunningTBRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(RefRunningTBRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.RefRunningTBRowChanged != null)) {
                    this.RefRunningTBRowChanged(this, new RefRunningTBRowChangeEvent(((RefRunningTBRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.RefRunningTBRowChanging != null)) {
                    this.RefRunningTBRowChanging(this, new RefRunningTBRowChangeEvent(((RefRunningTBRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.RefRunningTBRowDeleted != null)) {
                    this.RefRunningTBRowDeleted(this, new RefRunningTBRowChangeEvent(((RefRunningTBRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.RefRunningTBRowDeleting != null)) {
                    this.RefRunningTBRowDeleting(this, new RefRunningTBRowChangeEvent(((RefRunningTBRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveRefRunningTBRow(RefRunningTBRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MTL_WSLOG ds = new MTL_WSLOG();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "RefRunningTBDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class RefRunningTBForCounterServiceDataTable : global::System.Data.TypedTableBase<RefRunningTBForCounterServiceRow> {
            
            private global::System.Data.DataColumn columnrid;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RefRunningTBForCounterServiceDataTable() {
                this.TableName = "RefRunningTBForCounterService";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal RefRunningTBForCounterServiceDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected RefRunningTBForCounterServiceDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ridColumn {
                get {
                    return this.columnrid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RefRunningTBForCounterServiceRow this[int index] {
                get {
                    return ((RefRunningTBForCounterServiceRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event RefRunningTBForCounterServiceRowChangeEventHandler RefRunningTBForCounterServiceRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event RefRunningTBForCounterServiceRowChangeEventHandler RefRunningTBForCounterServiceRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event RefRunningTBForCounterServiceRowChangeEventHandler RefRunningTBForCounterServiceRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event RefRunningTBForCounterServiceRowChangeEventHandler RefRunningTBForCounterServiceRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddRefRunningTBForCounterServiceRow(RefRunningTBForCounterServiceRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RefRunningTBForCounterServiceRow AddRefRunningTBForCounterServiceRow() {
                RefRunningTBForCounterServiceRow rowRefRunningTBForCounterServiceRow = ((RefRunningTBForCounterServiceRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null};
                rowRefRunningTBForCounterServiceRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowRefRunningTBForCounterServiceRow);
                return rowRefRunningTBForCounterServiceRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RefRunningTBForCounterServiceRow FindByrid(int rid) {
                return ((RefRunningTBForCounterServiceRow)(this.Rows.Find(new object[] {
                            rid})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                RefRunningTBForCounterServiceDataTable cln = ((RefRunningTBForCounterServiceDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new RefRunningTBForCounterServiceDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnrid = base.Columns["rid"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnrid = new global::System.Data.DataColumn("rid", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrid);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnrid}, true));
                this.columnrid.AutoIncrement = true;
                this.columnrid.AutoIncrementSeed = -1;
                this.columnrid.AutoIncrementStep = -1;
                this.columnrid.AllowDBNull = false;
                this.columnrid.ReadOnly = true;
                this.columnrid.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RefRunningTBForCounterServiceRow NewRefRunningTBForCounterServiceRow() {
                return ((RefRunningTBForCounterServiceRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new RefRunningTBForCounterServiceRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(RefRunningTBForCounterServiceRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.RefRunningTBForCounterServiceRowChanged != null)) {
                    this.RefRunningTBForCounterServiceRowChanged(this, new RefRunningTBForCounterServiceRowChangeEvent(((RefRunningTBForCounterServiceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.RefRunningTBForCounterServiceRowChanging != null)) {
                    this.RefRunningTBForCounterServiceRowChanging(this, new RefRunningTBForCounterServiceRowChangeEvent(((RefRunningTBForCounterServiceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.RefRunningTBForCounterServiceRowDeleted != null)) {
                    this.RefRunningTBForCounterServiceRowDeleted(this, new RefRunningTBForCounterServiceRowChangeEvent(((RefRunningTBForCounterServiceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.RefRunningTBForCounterServiceRowDeleting != null)) {
                    this.RefRunningTBForCounterServiceRowDeleting(this, new RefRunningTBForCounterServiceRowChangeEvent(((RefRunningTBForCounterServiceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveRefRunningTBForCounterServiceRow(RefRunningTBForCounterServiceRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MTL_WSLOG ds = new MTL_WSLOG();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "RefRunningTBForCounterServiceDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class WSLogForCounterServiceDataTable : global::System.Data.TypedTableBase<WSLogForCounterServiceRow> {
            
            private global::System.Data.DataColumn columnrid;
            
            private global::System.Data.DataColumn columnPartner;
            
            private global::System.Data.DataColumn columnIPaddress;
            
            private global::System.Data.DataColumn columnAction;
            
            private global::System.Data.DataColumn columnLogDateTime;
            
            private global::System.Data.DataColumn columnWSName;
            
            private global::System.Data.DataColumn columnWSMethod;
            
            private global::System.Data.DataColumn columnRefRow;
            
            private global::System.Data.DataColumn columnTX_ID;
            
            private global::System.Data.DataColumn columnLOG_ID;
            
            private global::System.Data.DataColumn columnVENDOR_ID;
            
            private global::System.Data.DataColumn columnSERVICE_ID;
            
            private global::System.Data.DataColumn columnMETHOD;
            
            private global::System.Data.DataColumn columnCOUNTER_NO;
            
            private global::System.Data.DataColumn columnTERM_NO;
            
            private global::System.Data.DataColumn columnPOS_TAX_ID;
            
            private global::System.Data.DataColumn columnSERVICE_RUN_NO;
            
            private global::System.Data.DataColumn columnRECORD_STATUS;
            
            private global::System.Data.DataColumn columnCLIENT_SERVICE_RUN;
            
            private global::System.Data.DataColumn columnAMOUNT_RECEIVED;
            
            private global::System.Data.DataColumn columnVAT_AMOUNT;
            
            private global::System.Data.DataColumn columnBILL_TYPE;
            
            private global::System.Data.DataColumn columnREFERENCE_1;
            
            private global::System.Data.DataColumn columnREFERENCE_2;
            
            private global::System.Data.DataColumn columnREFERENCE_3;
            
            private global::System.Data.DataColumn columnREFERENCE_4;
            
            private global::System.Data.DataColumn columnCUSTOMER_NAME;
            
            private global::System.Data.DataColumn columnCUSTOMER_ADDR_1;
            
            private global::System.Data.DataColumn columnCUSTOMER_ADDR_2;
            
            private global::System.Data.DataColumn columnCUSTOMER_ADDR_3;
            
            private global::System.Data.DataColumn columnCUSTOMER_TEL_NO;
            
            private global::System.Data.DataColumn columnZONE;
            
            private global::System.Data.DataColumn columnR_SERVICE_RUNNO;
            
            private global::System.Data.DataColumn columnCANCEL_OPERATING;
            
            private global::System.Data.DataColumn columnOPERATE_BY_STAFF;
            
            private global::System.Data.DataColumn columnSYSTEM_DATE_TIME;
            
            private global::System.Data.DataColumn columnUSERID;
            
            private global::System.Data.DataColumn columnPASSWORD;
            
            private global::System.Data.DataColumn columnopTX_ID;
            
            private global::System.Data.DataColumn columnopLOG_ID;
            
            private global::System.Data.DataColumn columnopVENDOR_ID;
            
            private global::System.Data.DataColumn columnopSERVICE_ID;
            
            private global::System.Data.DataColumn columnopMETHOD;
            
            private global::System.Data.DataColumn columnopSUCCESS;
            
            private global::System.Data.DataColumn columnopCODE;
            
            private global::System.Data.DataColumn columnopDESC;
            
            private global::System.Data.DataColumn columnopREFERENCE_1;
            
            private global::System.Data.DataColumn columnopREFERENCE_2;
            
            private global::System.Data.DataColumn columnopREFERENCE_3;
            
            private global::System.Data.DataColumn columnopREFERENCE_4;
            
            private global::System.Data.DataColumn columnopCUSTOMER_NAME;
            
            private global::System.Data.DataColumn columnopCUSTOMER_ADDR_1;
            
            private global::System.Data.DataColumn columnopCUSTOMER_ADDR_2;
            
            private global::System.Data.DataColumn columnopCUSTOMER_ADDR_3;
            
            private global::System.Data.DataColumn columnopCUSTOMER_TEL_NO;
            
            private global::System.Data.DataColumn columnopRETURN1;
            
            private global::System.Data.DataColumn columnopRETURN2;
            
            private global::System.Data.DataColumn columnopRETURN3;
            
            private global::System.Data.DataColumn columnopAMOUNT_RECEIVED;
            
            private global::System.Data.DataColumn columnopPRINT_SLIP;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public WSLogForCounterServiceDataTable() {
                this.TableName = "WSLogForCounterService";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal WSLogForCounterServiceDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected WSLogForCounterServiceDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ridColumn {
                get {
                    return this.columnrid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PartnerColumn {
                get {
                    return this.columnPartner;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IPaddressColumn {
                get {
                    return this.columnIPaddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ActionColumn {
                get {
                    return this.columnAction;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LogDateTimeColumn {
                get {
                    return this.columnLogDateTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WSNameColumn {
                get {
                    return this.columnWSName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WSMethodColumn {
                get {
                    return this.columnWSMethod;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RefRowColumn {
                get {
                    return this.columnRefRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TX_IDColumn {
                get {
                    return this.columnTX_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LOG_IDColumn {
                get {
                    return this.columnLOG_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VENDOR_IDColumn {
                get {
                    return this.columnVENDOR_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SERVICE_IDColumn {
                get {
                    return this.columnSERVICE_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn METHODColumn {
                get {
                    return this.columnMETHOD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn COUNTER_NOColumn {
                get {
                    return this.columnCOUNTER_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TERM_NOColumn {
                get {
                    return this.columnTERM_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn POS_TAX_IDColumn {
                get {
                    return this.columnPOS_TAX_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SERVICE_RUN_NOColumn {
                get {
                    return this.columnSERVICE_RUN_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RECORD_STATUSColumn {
                get {
                    return this.columnRECORD_STATUS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CLIENT_SERVICE_RUNColumn {
                get {
                    return this.columnCLIENT_SERVICE_RUN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AMOUNT_RECEIVEDColumn {
                get {
                    return this.columnAMOUNT_RECEIVED;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VAT_AMOUNTColumn {
                get {
                    return this.columnVAT_AMOUNT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BILL_TYPEColumn {
                get {
                    return this.columnBILL_TYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn REFERENCE_1Column {
                get {
                    return this.columnREFERENCE_1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn REFERENCE_2Column {
                get {
                    return this.columnREFERENCE_2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn REFERENCE_3Column {
                get {
                    return this.columnREFERENCE_3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn REFERENCE_4Column {
                get {
                    return this.columnREFERENCE_4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CUSTOMER_NAMEColumn {
                get {
                    return this.columnCUSTOMER_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CUSTOMER_ADDR_1Column {
                get {
                    return this.columnCUSTOMER_ADDR_1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CUSTOMER_ADDR_2Column {
                get {
                    return this.columnCUSTOMER_ADDR_2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CUSTOMER_ADDR_3Column {
                get {
                    return this.columnCUSTOMER_ADDR_3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CUSTOMER_TEL_NOColumn {
                get {
                    return this.columnCUSTOMER_TEL_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ZONEColumn {
                get {
                    return this.columnZONE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn R_SERVICE_RUNNOColumn {
                get {
                    return this.columnR_SERVICE_RUNNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CANCEL_OPERATINGColumn {
                get {
                    return this.columnCANCEL_OPERATING;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OPERATE_BY_STAFFColumn {
                get {
                    return this.columnOPERATE_BY_STAFF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SYSTEM_DATE_TIMEColumn {
                get {
                    return this.columnSYSTEM_DATE_TIME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn USERIDColumn {
                get {
                    return this.columnUSERID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PASSWORDColumn {
                get {
                    return this.columnPASSWORD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn opTX_IDColumn {
                get {
                    return this.columnopTX_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn opLOG_IDColumn {
                get {
                    return this.columnopLOG_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn opVENDOR_IDColumn {
                get {
                    return this.columnopVENDOR_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn opSERVICE_IDColumn {
                get {
                    return this.columnopSERVICE_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn opMETHODColumn {
                get {
                    return this.columnopMETHOD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn opSUCCESSColumn {
                get {
                    return this.columnopSUCCESS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn opCODEColumn {
                get {
                    return this.columnopCODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn opDESCColumn {
                get {
                    return this.columnopDESC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn opREFERENCE_1Column {
                get {
                    return this.columnopREFERENCE_1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn opREFERENCE_2Column {
                get {
                    return this.columnopREFERENCE_2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn opREFERENCE_3Column {
                get {
                    return this.columnopREFERENCE_3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn opREFERENCE_4Column {
                get {
                    return this.columnopREFERENCE_4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn opCUSTOMER_NAMEColumn {
                get {
                    return this.columnopCUSTOMER_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn opCUSTOMER_ADDR_1Column {
                get {
                    return this.columnopCUSTOMER_ADDR_1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn opCUSTOMER_ADDR_2Column {
                get {
                    return this.columnopCUSTOMER_ADDR_2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn opCUSTOMER_ADDR_3Column {
                get {
                    return this.columnopCUSTOMER_ADDR_3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn opCUSTOMER_TEL_NOColumn {
                get {
                    return this.columnopCUSTOMER_TEL_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn opRETURN1Column {
                get {
                    return this.columnopRETURN1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn opRETURN2Column {
                get {
                    return this.columnopRETURN2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn opRETURN3Column {
                get {
                    return this.columnopRETURN3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn opAMOUNT_RECEIVEDColumn {
                get {
                    return this.columnopAMOUNT_RECEIVED;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn opPRINT_SLIPColumn {
                get {
                    return this.columnopPRINT_SLIP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public WSLogForCounterServiceRow this[int index] {
                get {
                    return ((WSLogForCounterServiceRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event WSLogForCounterServiceRowChangeEventHandler WSLogForCounterServiceRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event WSLogForCounterServiceRowChangeEventHandler WSLogForCounterServiceRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event WSLogForCounterServiceRowChangeEventHandler WSLogForCounterServiceRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event WSLogForCounterServiceRowChangeEventHandler WSLogForCounterServiceRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddWSLogForCounterServiceRow(WSLogForCounterServiceRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public WSLogForCounterServiceRow AddWSLogForCounterServiceRow(
                        string Partner, 
                        string IPaddress, 
                        string Action, 
                        System.DateTime LogDateTime, 
                        string WSName, 
                        string WSMethod, 
                        int RefRow, 
                        string TX_ID, 
                        string LOG_ID, 
                        string VENDOR_ID, 
                        string SERVICE_ID, 
                        string METHOD, 
                        string COUNTER_NO, 
                        string TERM_NO, 
                        string POS_TAX_ID, 
                        string SERVICE_RUN_NO, 
                        string RECORD_STATUS, 
                        string CLIENT_SERVICE_RUN, 
                        string AMOUNT_RECEIVED, 
                        string VAT_AMOUNT, 
                        string BILL_TYPE, 
                        string REFERENCE_1, 
                        string REFERENCE_2, 
                        string REFERENCE_3, 
                        string REFERENCE_4, 
                        string CUSTOMER_NAME, 
                        string CUSTOMER_ADDR_1, 
                        string CUSTOMER_ADDR_2, 
                        string CUSTOMER_ADDR_3, 
                        string CUSTOMER_TEL_NO, 
                        string ZONE, 
                        string R_SERVICE_RUNNO, 
                        string CANCEL_OPERATING, 
                        string OPERATE_BY_STAFF, 
                        string SYSTEM_DATE_TIME, 
                        string USERID, 
                        string PASSWORD, 
                        string opTX_ID, 
                        string opLOG_ID, 
                        string opVENDOR_ID, 
                        string opSERVICE_ID, 
                        string opMETHOD, 
                        string opSUCCESS, 
                        string opCODE, 
                        string opDESC, 
                        string opREFERENCE_1, 
                        string opREFERENCE_2, 
                        string opREFERENCE_3, 
                        string opREFERENCE_4, 
                        string opCUSTOMER_NAME, 
                        string opCUSTOMER_ADDR_1, 
                        string opCUSTOMER_ADDR_2, 
                        string opCUSTOMER_ADDR_3, 
                        string opCUSTOMER_TEL_NO, 
                        string opRETURN1, 
                        string opRETURN2, 
                        string opRETURN3, 
                        string opAMOUNT_RECEIVED, 
                        string opPRINT_SLIP) {
                WSLogForCounterServiceRow rowWSLogForCounterServiceRow = ((WSLogForCounterServiceRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Partner,
                        IPaddress,
                        Action,
                        LogDateTime,
                        WSName,
                        WSMethod,
                        RefRow,
                        TX_ID,
                        LOG_ID,
                        VENDOR_ID,
                        SERVICE_ID,
                        METHOD,
                        COUNTER_NO,
                        TERM_NO,
                        POS_TAX_ID,
                        SERVICE_RUN_NO,
                        RECORD_STATUS,
                        CLIENT_SERVICE_RUN,
                        AMOUNT_RECEIVED,
                        VAT_AMOUNT,
                        BILL_TYPE,
                        REFERENCE_1,
                        REFERENCE_2,
                        REFERENCE_3,
                        REFERENCE_4,
                        CUSTOMER_NAME,
                        CUSTOMER_ADDR_1,
                        CUSTOMER_ADDR_2,
                        CUSTOMER_ADDR_3,
                        CUSTOMER_TEL_NO,
                        ZONE,
                        R_SERVICE_RUNNO,
                        CANCEL_OPERATING,
                        OPERATE_BY_STAFF,
                        SYSTEM_DATE_TIME,
                        USERID,
                        PASSWORD,
                        opTX_ID,
                        opLOG_ID,
                        opVENDOR_ID,
                        opSERVICE_ID,
                        opMETHOD,
                        opSUCCESS,
                        opCODE,
                        opDESC,
                        opREFERENCE_1,
                        opREFERENCE_2,
                        opREFERENCE_3,
                        opREFERENCE_4,
                        opCUSTOMER_NAME,
                        opCUSTOMER_ADDR_1,
                        opCUSTOMER_ADDR_2,
                        opCUSTOMER_ADDR_3,
                        opCUSTOMER_TEL_NO,
                        opRETURN1,
                        opRETURN2,
                        opRETURN3,
                        opAMOUNT_RECEIVED,
                        opPRINT_SLIP};
                rowWSLogForCounterServiceRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowWSLogForCounterServiceRow);
                return rowWSLogForCounterServiceRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public WSLogForCounterServiceRow FindByrid(int rid) {
                return ((WSLogForCounterServiceRow)(this.Rows.Find(new object[] {
                            rid})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                WSLogForCounterServiceDataTable cln = ((WSLogForCounterServiceDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new WSLogForCounterServiceDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnrid = base.Columns["rid"];
                this.columnPartner = base.Columns["Partner"];
                this.columnIPaddress = base.Columns["IPaddress"];
                this.columnAction = base.Columns["Action"];
                this.columnLogDateTime = base.Columns["LogDateTime"];
                this.columnWSName = base.Columns["WSName"];
                this.columnWSMethod = base.Columns["WSMethod"];
                this.columnRefRow = base.Columns["RefRow"];
                this.columnTX_ID = base.Columns["TX_ID"];
                this.columnLOG_ID = base.Columns["LOG_ID"];
                this.columnVENDOR_ID = base.Columns["VENDOR_ID"];
                this.columnSERVICE_ID = base.Columns["SERVICE_ID"];
                this.columnMETHOD = base.Columns["METHOD"];
                this.columnCOUNTER_NO = base.Columns["COUNTER_NO"];
                this.columnTERM_NO = base.Columns["TERM_NO"];
                this.columnPOS_TAX_ID = base.Columns["POS_TAX_ID"];
                this.columnSERVICE_RUN_NO = base.Columns["SERVICE_RUN_NO"];
                this.columnRECORD_STATUS = base.Columns["RECORD_STATUS"];
                this.columnCLIENT_SERVICE_RUN = base.Columns["CLIENT_SERVICE_RUN"];
                this.columnAMOUNT_RECEIVED = base.Columns["AMOUNT_RECEIVED"];
                this.columnVAT_AMOUNT = base.Columns["VAT_AMOUNT"];
                this.columnBILL_TYPE = base.Columns["BILL_TYPE"];
                this.columnREFERENCE_1 = base.Columns["REFERENCE_1"];
                this.columnREFERENCE_2 = base.Columns["REFERENCE_2"];
                this.columnREFERENCE_3 = base.Columns["REFERENCE_3"];
                this.columnREFERENCE_4 = base.Columns["REFERENCE_4"];
                this.columnCUSTOMER_NAME = base.Columns["CUSTOMER_NAME"];
                this.columnCUSTOMER_ADDR_1 = base.Columns["CUSTOMER_ADDR_1"];
                this.columnCUSTOMER_ADDR_2 = base.Columns["CUSTOMER_ADDR_2"];
                this.columnCUSTOMER_ADDR_3 = base.Columns["CUSTOMER_ADDR_3"];
                this.columnCUSTOMER_TEL_NO = base.Columns["CUSTOMER_TEL_NO"];
                this.columnZONE = base.Columns["ZONE"];
                this.columnR_SERVICE_RUNNO = base.Columns["R_SERVICE_RUNNO"];
                this.columnCANCEL_OPERATING = base.Columns["CANCEL_OPERATING"];
                this.columnOPERATE_BY_STAFF = base.Columns["OPERATE_BY_STAFF"];
                this.columnSYSTEM_DATE_TIME = base.Columns["SYSTEM_DATE_TIME"];
                this.columnUSERID = base.Columns["USERID"];
                this.columnPASSWORD = base.Columns["PASSWORD"];
                this.columnopTX_ID = base.Columns["opTX_ID"];
                this.columnopLOG_ID = base.Columns["opLOG_ID"];
                this.columnopVENDOR_ID = base.Columns["opVENDOR_ID"];
                this.columnopSERVICE_ID = base.Columns["opSERVICE_ID"];
                this.columnopMETHOD = base.Columns["opMETHOD"];
                this.columnopSUCCESS = base.Columns["opSUCCESS"];
                this.columnopCODE = base.Columns["opCODE"];
                this.columnopDESC = base.Columns["opDESC"];
                this.columnopREFERENCE_1 = base.Columns["opREFERENCE_1"];
                this.columnopREFERENCE_2 = base.Columns["opREFERENCE_2"];
                this.columnopREFERENCE_3 = base.Columns["opREFERENCE_3"];
                this.columnopREFERENCE_4 = base.Columns["opREFERENCE_4"];
                this.columnopCUSTOMER_NAME = base.Columns["opCUSTOMER_NAME"];
                this.columnopCUSTOMER_ADDR_1 = base.Columns["opCUSTOMER_ADDR_1"];
                this.columnopCUSTOMER_ADDR_2 = base.Columns["opCUSTOMER_ADDR_2"];
                this.columnopCUSTOMER_ADDR_3 = base.Columns["opCUSTOMER_ADDR_3"];
                this.columnopCUSTOMER_TEL_NO = base.Columns["opCUSTOMER_TEL_NO"];
                this.columnopRETURN1 = base.Columns["opRETURN1"];
                this.columnopRETURN2 = base.Columns["opRETURN2"];
                this.columnopRETURN3 = base.Columns["opRETURN3"];
                this.columnopAMOUNT_RECEIVED = base.Columns["opAMOUNT_RECEIVED"];
                this.columnopPRINT_SLIP = base.Columns["opPRINT_SLIP"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnrid = new global::System.Data.DataColumn("rid", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrid);
                this.columnPartner = new global::System.Data.DataColumn("Partner", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPartner);
                this.columnIPaddress = new global::System.Data.DataColumn("IPaddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIPaddress);
                this.columnAction = new global::System.Data.DataColumn("Action", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAction);
                this.columnLogDateTime = new global::System.Data.DataColumn("LogDateTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLogDateTime);
                this.columnWSName = new global::System.Data.DataColumn("WSName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWSName);
                this.columnWSMethod = new global::System.Data.DataColumn("WSMethod", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWSMethod);
                this.columnRefRow = new global::System.Data.DataColumn("RefRow", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRefRow);
                this.columnTX_ID = new global::System.Data.DataColumn("TX_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTX_ID);
                this.columnLOG_ID = new global::System.Data.DataColumn("LOG_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOG_ID);
                this.columnVENDOR_ID = new global::System.Data.DataColumn("VENDOR_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVENDOR_ID);
                this.columnSERVICE_ID = new global::System.Data.DataColumn("SERVICE_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSERVICE_ID);
                this.columnMETHOD = new global::System.Data.DataColumn("METHOD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMETHOD);
                this.columnCOUNTER_NO = new global::System.Data.DataColumn("COUNTER_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOUNTER_NO);
                this.columnTERM_NO = new global::System.Data.DataColumn("TERM_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTERM_NO);
                this.columnPOS_TAX_ID = new global::System.Data.DataColumn("POS_TAX_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPOS_TAX_ID);
                this.columnSERVICE_RUN_NO = new global::System.Data.DataColumn("SERVICE_RUN_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSERVICE_RUN_NO);
                this.columnRECORD_STATUS = new global::System.Data.DataColumn("RECORD_STATUS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRECORD_STATUS);
                this.columnCLIENT_SERVICE_RUN = new global::System.Data.DataColumn("CLIENT_SERVICE_RUN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCLIENT_SERVICE_RUN);
                this.columnAMOUNT_RECEIVED = new global::System.Data.DataColumn("AMOUNT_RECEIVED", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAMOUNT_RECEIVED);
                this.columnVAT_AMOUNT = new global::System.Data.DataColumn("VAT_AMOUNT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVAT_AMOUNT);
                this.columnBILL_TYPE = new global::System.Data.DataColumn("BILL_TYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBILL_TYPE);
                this.columnREFERENCE_1 = new global::System.Data.DataColumn("REFERENCE_1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREFERENCE_1);
                this.columnREFERENCE_2 = new global::System.Data.DataColumn("REFERENCE_2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREFERENCE_2);
                this.columnREFERENCE_3 = new global::System.Data.DataColumn("REFERENCE_3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREFERENCE_3);
                this.columnREFERENCE_4 = new global::System.Data.DataColumn("REFERENCE_4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREFERENCE_4);
                this.columnCUSTOMER_NAME = new global::System.Data.DataColumn("CUSTOMER_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCUSTOMER_NAME);
                this.columnCUSTOMER_ADDR_1 = new global::System.Data.DataColumn("CUSTOMER_ADDR_1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCUSTOMER_ADDR_1);
                this.columnCUSTOMER_ADDR_2 = new global::System.Data.DataColumn("CUSTOMER_ADDR_2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCUSTOMER_ADDR_2);
                this.columnCUSTOMER_ADDR_3 = new global::System.Data.DataColumn("CUSTOMER_ADDR_3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCUSTOMER_ADDR_3);
                this.columnCUSTOMER_TEL_NO = new global::System.Data.DataColumn("CUSTOMER_TEL_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCUSTOMER_TEL_NO);
                this.columnZONE = new global::System.Data.DataColumn("ZONE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnZONE);
                this.columnR_SERVICE_RUNNO = new global::System.Data.DataColumn("R_SERVICE_RUNNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnR_SERVICE_RUNNO);
                this.columnCANCEL_OPERATING = new global::System.Data.DataColumn("CANCEL_OPERATING", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCANCEL_OPERATING);
                this.columnOPERATE_BY_STAFF = new global::System.Data.DataColumn("OPERATE_BY_STAFF", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOPERATE_BY_STAFF);
                this.columnSYSTEM_DATE_TIME = new global::System.Data.DataColumn("SYSTEM_DATE_TIME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSYSTEM_DATE_TIME);
                this.columnUSERID = new global::System.Data.DataColumn("USERID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSERID);
                this.columnPASSWORD = new global::System.Data.DataColumn("PASSWORD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPASSWORD);
                this.columnopTX_ID = new global::System.Data.DataColumn("opTX_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnopTX_ID);
                this.columnopLOG_ID = new global::System.Data.DataColumn("opLOG_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnopLOG_ID);
                this.columnopVENDOR_ID = new global::System.Data.DataColumn("opVENDOR_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnopVENDOR_ID);
                this.columnopSERVICE_ID = new global::System.Data.DataColumn("opSERVICE_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnopSERVICE_ID);
                this.columnopMETHOD = new global::System.Data.DataColumn("opMETHOD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnopMETHOD);
                this.columnopSUCCESS = new global::System.Data.DataColumn("opSUCCESS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnopSUCCESS);
                this.columnopCODE = new global::System.Data.DataColumn("opCODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnopCODE);
                this.columnopDESC = new global::System.Data.DataColumn("opDESC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnopDESC);
                this.columnopREFERENCE_1 = new global::System.Data.DataColumn("opREFERENCE_1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnopREFERENCE_1);
                this.columnopREFERENCE_2 = new global::System.Data.DataColumn("opREFERENCE_2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnopREFERENCE_2);
                this.columnopREFERENCE_3 = new global::System.Data.DataColumn("opREFERENCE_3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnopREFERENCE_3);
                this.columnopREFERENCE_4 = new global::System.Data.DataColumn("opREFERENCE_4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnopREFERENCE_4);
                this.columnopCUSTOMER_NAME = new global::System.Data.DataColumn("opCUSTOMER_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnopCUSTOMER_NAME);
                this.columnopCUSTOMER_ADDR_1 = new global::System.Data.DataColumn("opCUSTOMER_ADDR_1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnopCUSTOMER_ADDR_1);
                this.columnopCUSTOMER_ADDR_2 = new global::System.Data.DataColumn("opCUSTOMER_ADDR_2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnopCUSTOMER_ADDR_2);
                this.columnopCUSTOMER_ADDR_3 = new global::System.Data.DataColumn("opCUSTOMER_ADDR_3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnopCUSTOMER_ADDR_3);
                this.columnopCUSTOMER_TEL_NO = new global::System.Data.DataColumn("opCUSTOMER_TEL_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnopCUSTOMER_TEL_NO);
                this.columnopRETURN1 = new global::System.Data.DataColumn("opRETURN1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnopRETURN1);
                this.columnopRETURN2 = new global::System.Data.DataColumn("opRETURN2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnopRETURN2);
                this.columnopRETURN3 = new global::System.Data.DataColumn("opRETURN3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnopRETURN3);
                this.columnopAMOUNT_RECEIVED = new global::System.Data.DataColumn("opAMOUNT_RECEIVED", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnopAMOUNT_RECEIVED);
                this.columnopPRINT_SLIP = new global::System.Data.DataColumn("opPRINT_SLIP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnopPRINT_SLIP);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnrid}, true));
                this.columnrid.AutoIncrement = true;
                this.columnrid.AutoIncrementSeed = -1;
                this.columnrid.AutoIncrementStep = -1;
                this.columnrid.AllowDBNull = false;
                this.columnrid.ReadOnly = true;
                this.columnrid.Unique = true;
                this.columnPartner.MaxLength = 100;
                this.columnIPaddress.AllowDBNull = false;
                this.columnIPaddress.MaxLength = 50;
                this.columnAction.MaxLength = 50;
                this.columnLogDateTime.AllowDBNull = false;
                this.columnWSName.MaxLength = 100;
                this.columnWSMethod.MaxLength = 100;
                this.columnTX_ID.MaxLength = 50;
                this.columnLOG_ID.MaxLength = 50;
                this.columnVENDOR_ID.MaxLength = 50;
                this.columnSERVICE_ID.MaxLength = 50;
                this.columnMETHOD.MaxLength = 50;
                this.columnCOUNTER_NO.MaxLength = 50;
                this.columnTERM_NO.MaxLength = 50;
                this.columnPOS_TAX_ID.MaxLength = 50;
                this.columnSERVICE_RUN_NO.MaxLength = 50;
                this.columnRECORD_STATUS.MaxLength = 50;
                this.columnCLIENT_SERVICE_RUN.MaxLength = 50;
                this.columnAMOUNT_RECEIVED.MaxLength = 50;
                this.columnVAT_AMOUNT.MaxLength = 50;
                this.columnBILL_TYPE.MaxLength = 50;
                this.columnREFERENCE_1.MaxLength = 50;
                this.columnREFERENCE_2.MaxLength = 50;
                this.columnREFERENCE_3.MaxLength = 50;
                this.columnREFERENCE_4.MaxLength = 50;
                this.columnCUSTOMER_NAME.MaxLength = 50;
                this.columnCUSTOMER_ADDR_1.MaxLength = 50;
                this.columnCUSTOMER_ADDR_2.MaxLength = 50;
                this.columnCUSTOMER_ADDR_3.MaxLength = 50;
                this.columnCUSTOMER_TEL_NO.MaxLength = 50;
                this.columnZONE.MaxLength = 50;
                this.columnR_SERVICE_RUNNO.MaxLength = 50;
                this.columnCANCEL_OPERATING.MaxLength = 50;
                this.columnOPERATE_BY_STAFF.MaxLength = 50;
                this.columnSYSTEM_DATE_TIME.MaxLength = 50;
                this.columnUSERID.MaxLength = 50;
                this.columnPASSWORD.MaxLength = 50;
                this.columnopTX_ID.MaxLength = 50;
                this.columnopLOG_ID.MaxLength = 50;
                this.columnopVENDOR_ID.MaxLength = 50;
                this.columnopSERVICE_ID.MaxLength = 50;
                this.columnopMETHOD.MaxLength = 50;
                this.columnopSUCCESS.MaxLength = 50;
                this.columnopCODE.MaxLength = 50;
                this.columnopDESC.MaxLength = 50;
                this.columnopREFERENCE_1.MaxLength = 50;
                this.columnopREFERENCE_2.MaxLength = 50;
                this.columnopREFERENCE_3.MaxLength = 50;
                this.columnopREFERENCE_4.MaxLength = 50;
                this.columnopCUSTOMER_NAME.MaxLength = 50;
                this.columnopCUSTOMER_ADDR_1.MaxLength = 50;
                this.columnopCUSTOMER_ADDR_2.MaxLength = 50;
                this.columnopCUSTOMER_ADDR_3.MaxLength = 50;
                this.columnopCUSTOMER_TEL_NO.MaxLength = 50;
                this.columnopRETURN1.MaxLength = 50;
                this.columnopRETURN2.MaxLength = 50;
                this.columnopRETURN3.MaxLength = 50;
                this.columnopAMOUNT_RECEIVED.MaxLength = 50;
                this.columnopPRINT_SLIP.MaxLength = 1000;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public WSLogForCounterServiceRow NewWSLogForCounterServiceRow() {
                return ((WSLogForCounterServiceRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new WSLogForCounterServiceRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(WSLogForCounterServiceRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.WSLogForCounterServiceRowChanged != null)) {
                    this.WSLogForCounterServiceRowChanged(this, new WSLogForCounterServiceRowChangeEvent(((WSLogForCounterServiceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.WSLogForCounterServiceRowChanging != null)) {
                    this.WSLogForCounterServiceRowChanging(this, new WSLogForCounterServiceRowChangeEvent(((WSLogForCounterServiceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.WSLogForCounterServiceRowDeleted != null)) {
                    this.WSLogForCounterServiceRowDeleted(this, new WSLogForCounterServiceRowChangeEvent(((WSLogForCounterServiceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.WSLogForCounterServiceRowDeleting != null)) {
                    this.WSLogForCounterServiceRowDeleting(this, new WSLogForCounterServiceRowChangeEvent(((WSLogForCounterServiceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveWSLogForCounterServiceRow(WSLogForCounterServiceRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MTL_WSLOG ds = new MTL_WSLOG();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "WSLogForCounterServiceDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class WSLogRow : global::System.Data.DataRow {
            
            private WSLogDataTable tableWSLog;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal WSLogRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableWSLog = ((WSLogDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int rid {
                get {
                    return ((int)(this[this.tableWSLog.ridColumn]));
                }
                set {
                    this[this.tableWSLog.ridColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Partner {
                get {
                    try {
                        return ((string)(this[this.tableWSLog.PartnerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Partner\' in table \'WSLog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWSLog.PartnerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string IPaddress {
                get {
                    return ((string)(this[this.tableWSLog.IPaddressColumn]));
                }
                set {
                    this[this.tableWSLog.IPaddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Action {
                get {
                    try {
                        return ((string)(this[this.tableWSLog.ActionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Action\' in table \'WSLog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWSLog.ActionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime LogDateTime {
                get {
                    return ((global::System.DateTime)(this[this.tableWSLog.LogDateTimeColumn]));
                }
                set {
                    this[this.tableWSLog.LogDateTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string WSName {
                get {
                    try {
                        return ((string)(this[this.tableWSLog.WSNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WSName\' in table \'WSLog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWSLog.WSNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string WSMethod {
                get {
                    try {
                        return ((string)(this[this.tableWSLog.WSMethodColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WSMethod\' in table \'WSLog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWSLog.WSMethodColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Detail {
                get {
                    try {
                        return ((string)(this[this.tableWSLog.DetailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Detail\' in table \'WSLog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWSLog.DetailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int RefRow {
                get {
                    try {
                        return ((int)(this[this.tableWSLog.RefRowColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RefRow\' in table \'WSLog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWSLog.RefRowColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPartnerNull() {
                return this.IsNull(this.tableWSLog.PartnerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPartnerNull() {
                this[this.tableWSLog.PartnerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsActionNull() {
                return this.IsNull(this.tableWSLog.ActionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetActionNull() {
                this[this.tableWSLog.ActionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsWSNameNull() {
                return this.IsNull(this.tableWSLog.WSNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetWSNameNull() {
                this[this.tableWSLog.WSNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsWSMethodNull() {
                return this.IsNull(this.tableWSLog.WSMethodColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetWSMethodNull() {
                this[this.tableWSLog.WSMethodColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDetailNull() {
                return this.IsNull(this.tableWSLog.DetailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDetailNull() {
                this[this.tableWSLog.DetailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRefRowNull() {
                return this.IsNull(this.tableWSLog.RefRowColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRefRowNull() {
                this[this.tableWSLog.RefRowColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class RefRunningTBRow : global::System.Data.DataRow {
            
            private RefRunningTBDataTable tableRefRunningTB;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal RefRunningTBRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableRefRunningTB = ((RefRunningTBDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int rid {
                get {
                    return ((int)(this[this.tableRefRunningTB.ridColumn]));
                }
                set {
                    this[this.tableRefRunningTB.ridColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class RefRunningTBForCounterServiceRow : global::System.Data.DataRow {
            
            private RefRunningTBForCounterServiceDataTable tableRefRunningTBForCounterService;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal RefRunningTBForCounterServiceRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableRefRunningTBForCounterService = ((RefRunningTBForCounterServiceDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int rid {
                get {
                    return ((int)(this[this.tableRefRunningTBForCounterService.ridColumn]));
                }
                set {
                    this[this.tableRefRunningTBForCounterService.ridColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class WSLogForCounterServiceRow : global::System.Data.DataRow {
            
            private WSLogForCounterServiceDataTable tableWSLogForCounterService;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal WSLogForCounterServiceRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableWSLogForCounterService = ((WSLogForCounterServiceDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int rid {
                get {
                    return ((int)(this[this.tableWSLogForCounterService.ridColumn]));
                }
                set {
                    this[this.tableWSLogForCounterService.ridColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Partner {
                get {
                    try {
                        return ((string)(this[this.tableWSLogForCounterService.PartnerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Partner\' in table \'WSLogForCounterService\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWSLogForCounterService.PartnerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string IPaddress {
                get {
                    return ((string)(this[this.tableWSLogForCounterService.IPaddressColumn]));
                }
                set {
                    this[this.tableWSLogForCounterService.IPaddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Action {
                get {
                    try {
                        return ((string)(this[this.tableWSLogForCounterService.ActionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Action\' in table \'WSLogForCounterService\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWSLogForCounterService.ActionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime LogDateTime {
                get {
                    return ((global::System.DateTime)(this[this.tableWSLogForCounterService.LogDateTimeColumn]));
                }
                set {
                    this[this.tableWSLogForCounterService.LogDateTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string WSName {
                get {
                    try {
                        return ((string)(this[this.tableWSLogForCounterService.WSNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WSName\' in table \'WSLogForCounterService\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWSLogForCounterService.WSNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string WSMethod {
                get {
                    try {
                        return ((string)(this[this.tableWSLogForCounterService.WSMethodColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WSMethod\' in table \'WSLogForCounterService\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWSLogForCounterService.WSMethodColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int RefRow {
                get {
                    try {
                        return ((int)(this[this.tableWSLogForCounterService.RefRowColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RefRow\' in table \'WSLogForCounterService\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWSLogForCounterService.RefRowColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TX_ID {
                get {
                    try {
                        return ((string)(this[this.tableWSLogForCounterService.TX_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TX_ID\' in table \'WSLogForCounterService\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWSLogForCounterService.TX_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LOG_ID {
                get {
                    try {
                        return ((string)(this[this.tableWSLogForCounterService.LOG_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LOG_ID\' in table \'WSLogForCounterService\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWSLogForCounterService.LOG_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string VENDOR_ID {
                get {
                    try {
                        return ((string)(this[this.tableWSLogForCounterService.VENDOR_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VENDOR_ID\' in table \'WSLogForCounterService\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWSLogForCounterService.VENDOR_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SERVICE_ID {
                get {
                    try {
                        return ((string)(this[this.tableWSLogForCounterService.SERVICE_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SERVICE_ID\' in table \'WSLogForCounterService\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWSLogForCounterService.SERVICE_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string METHOD {
                get {
                    try {
                        return ((string)(this[this.tableWSLogForCounterService.METHODColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'METHOD\' in table \'WSLogForCounterService\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWSLogForCounterService.METHODColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string COUNTER_NO {
                get {
                    try {
                        return ((string)(this[this.tableWSLogForCounterService.COUNTER_NOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'COUNTER_NO\' in table \'WSLogForCounterService\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWSLogForCounterService.COUNTER_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TERM_NO {
                get {
                    try {
                        return ((string)(this[this.tableWSLogForCounterService.TERM_NOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TERM_NO\' in table \'WSLogForCounterService\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWSLogForCounterService.TERM_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string POS_TAX_ID {
                get {
                    try {
                        return ((string)(this[this.tableWSLogForCounterService.POS_TAX_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'POS_TAX_ID\' in table \'WSLogForCounterService\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWSLogForCounterService.POS_TAX_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SERVICE_RUN_NO {
                get {
                    try {
                        return ((string)(this[this.tableWSLogForCounterService.SERVICE_RUN_NOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SERVICE_RUN_NO\' in table \'WSLogForCounterService\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableWSLogForCounterService.SERVICE_RUN_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string RECORD_STATUS {
                get {
                    try {
                        return ((string)(this[this.tableWSLogForCounterService.RECORD_STATUSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RECORD_STATUS\' in table \'WSLogForCounterService\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableWSLogForCounterService.RECORD_STATUSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CLIENT_SERVICE_RUN {
                get {
                    try {
                        return ((string)(this[this.tableWSLogForCounterService.CLIENT_SERVICE_RUNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CLIENT_SERVICE_RUN\' in table \'WSLogForCounterService\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableWSLogForCounterService.CLIENT_SERVICE_RUNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AMOUNT_RECEIVED {
                get {
                    try {
                        return ((string)(this[this.tableWSLogForCounterService.AMOUNT_RECEIVEDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AMOUNT_RECEIVED\' in table \'WSLogForCounterService\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableWSLogForCounterService.AMOUNT_RECEIVEDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string VAT_AMOUNT {
                get {
                    try {
                        return ((string)(this[this.tableWSLogForCounterService.VAT_AMOUNTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VAT_AMOUNT\' in table \'WSLogForCounterService\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWSLogForCounterService.VAT_AMOUNTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BILL_TYPE {
                get {
                    try {
                        return ((string)(this[this.tableWSLogForCounterService.BILL_TYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BILL_TYPE\' in table \'WSLogForCounterService\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWSLogForCounterService.BILL_TYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string REFERENCE_1 {
                get {
                    try {
                        return ((string)(this[this.tableWSLogForCounterService.REFERENCE_1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'REFERENCE_1\' in table \'WSLogForCounterService\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWSLogForCounterService.REFERENCE_1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string REFERENCE_2 {
                get {
                    try {
                        return ((string)(this[this.tableWSLogForCounterService.REFERENCE_2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'REFERENCE_2\' in table \'WSLogForCounterService\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWSLogForCounterService.REFERENCE_2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string REFERENCE_3 {
                get {
                    try {
                        return ((string)(this[this.tableWSLogForCounterService.REFERENCE_3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'REFERENCE_3\' in table \'WSLogForCounterService\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWSLogForCounterService.REFERENCE_3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string REFERENCE_4 {
                get {
                    try {
                        return ((string)(this[this.tableWSLogForCounterService.REFERENCE_4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'REFERENCE_4\' in table \'WSLogForCounterService\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWSLogForCounterService.REFERENCE_4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CUSTOMER_NAME {
                get {
                    try {
                        return ((string)(this[this.tableWSLogForCounterService.CUSTOMER_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CUSTOMER_NAME\' in table \'WSLogForCounterService\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableWSLogForCounterService.CUSTOMER_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CUSTOMER_ADDR_1 {
                get {
                    try {
                        return ((string)(this[this.tableWSLogForCounterService.CUSTOMER_ADDR_1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CUSTOMER_ADDR_1\' in table \'WSLogForCounterService\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableWSLogForCounterService.CUSTOMER_ADDR_1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CUSTOMER_ADDR_2 {
                get {
                    try {
                        return ((string)(this[this.tableWSLogForCounterService.CUSTOMER_ADDR_2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CUSTOMER_ADDR_2\' in table \'WSLogForCounterService\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableWSLogForCounterService.CUSTOMER_ADDR_2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CUSTOMER_ADDR_3 {
                get {
                    try {
                        return ((string)(this[this.tableWSLogForCounterService.CUSTOMER_ADDR_3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CUSTOMER_ADDR_3\' in table \'WSLogForCounterService\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableWSLogForCounterService.CUSTOMER_ADDR_3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CUSTOMER_TEL_NO {
                get {
                    try {
                        return ((string)(this[this.tableWSLogForCounterService.CUSTOMER_TEL_NOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CUSTOMER_TEL_NO\' in table \'WSLogForCounterService\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableWSLogForCounterService.CUSTOMER_TEL_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ZONE {
                get {
                    try {
                        return ((string)(this[this.tableWSLogForCounterService.ZONEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ZONE\' in table \'WSLogForCounterService\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWSLogForCounterService.ZONEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string R_SERVICE_RUNNO {
                get {
                    try {
                        return ((string)(this[this.tableWSLogForCounterService.R_SERVICE_RUNNOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'R_SERVICE_RUNNO\' in table \'WSLogForCounterService\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableWSLogForCounterService.R_SERVICE_RUNNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CANCEL_OPERATING {
                get {
                    try {
                        return ((string)(this[this.tableWSLogForCounterService.CANCEL_OPERATINGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CANCEL_OPERATING\' in table \'WSLogForCounterService\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableWSLogForCounterService.CANCEL_OPERATINGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OPERATE_BY_STAFF {
                get {
                    try {
                        return ((string)(this[this.tableWSLogForCounterService.OPERATE_BY_STAFFColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OPERATE_BY_STAFF\' in table \'WSLogForCounterService\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableWSLogForCounterService.OPERATE_BY_STAFFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SYSTEM_DATE_TIME {
                get {
                    try {
                        return ((string)(this[this.tableWSLogForCounterService.SYSTEM_DATE_TIMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SYSTEM_DATE_TIME\' in table \'WSLogForCounterService\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableWSLogForCounterService.SYSTEM_DATE_TIMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string USERID {
                get {
                    try {
                        return ((string)(this[this.tableWSLogForCounterService.USERIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USERID\' in table \'WSLogForCounterService\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWSLogForCounterService.USERIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PASSWORD {
                get {
                    try {
                        return ((string)(this[this.tableWSLogForCounterService.PASSWORDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PASSWORD\' in table \'WSLogForCounterService\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWSLogForCounterService.PASSWORDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string opTX_ID {
                get {
                    try {
                        return ((string)(this[this.tableWSLogForCounterService.opTX_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'opTX_ID\' in table \'WSLogForCounterService\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWSLogForCounterService.opTX_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string opLOG_ID {
                get {
                    try {
                        return ((string)(this[this.tableWSLogForCounterService.opLOG_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'opLOG_ID\' in table \'WSLogForCounterService\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWSLogForCounterService.opLOG_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string opVENDOR_ID {
                get {
                    try {
                        return ((string)(this[this.tableWSLogForCounterService.opVENDOR_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'opVENDOR_ID\' in table \'WSLogForCounterService\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWSLogForCounterService.opVENDOR_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string opSERVICE_ID {
                get {
                    try {
                        return ((string)(this[this.tableWSLogForCounterService.opSERVICE_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'opSERVICE_ID\' in table \'WSLogForCounterService\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWSLogForCounterService.opSERVICE_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string opMETHOD {
                get {
                    try {
                        return ((string)(this[this.tableWSLogForCounterService.opMETHODColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'opMETHOD\' in table \'WSLogForCounterService\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWSLogForCounterService.opMETHODColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string opSUCCESS {
                get {
                    try {
                        return ((string)(this[this.tableWSLogForCounterService.opSUCCESSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'opSUCCESS\' in table \'WSLogForCounterService\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWSLogForCounterService.opSUCCESSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string opCODE {
                get {
                    try {
                        return ((string)(this[this.tableWSLogForCounterService.opCODEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'opCODE\' in table \'WSLogForCounterService\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWSLogForCounterService.opCODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string opDESC {
                get {
                    try {
                        return ((string)(this[this.tableWSLogForCounterService.opDESCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'opDESC\' in table \'WSLogForCounterService\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWSLogForCounterService.opDESCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string opREFERENCE_1 {
                get {
                    try {
                        return ((string)(this[this.tableWSLogForCounterService.opREFERENCE_1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'opREFERENCE_1\' in table \'WSLogForCounterService\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableWSLogForCounterService.opREFERENCE_1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string opREFERENCE_2 {
                get {
                    try {
                        return ((string)(this[this.tableWSLogForCounterService.opREFERENCE_2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'opREFERENCE_2\' in table \'WSLogForCounterService\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableWSLogForCounterService.opREFERENCE_2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string opREFERENCE_3 {
                get {
                    try {
                        return ((string)(this[this.tableWSLogForCounterService.opREFERENCE_3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'opREFERENCE_3\' in table \'WSLogForCounterService\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableWSLogForCounterService.opREFERENCE_3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string opREFERENCE_4 {
                get {
                    try {
                        return ((string)(this[this.tableWSLogForCounterService.opREFERENCE_4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'opREFERENCE_4\' in table \'WSLogForCounterService\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableWSLogForCounterService.opREFERENCE_4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string opCUSTOMER_NAME {
                get {
                    try {
                        return ((string)(this[this.tableWSLogForCounterService.opCUSTOMER_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'opCUSTOMER_NAME\' in table \'WSLogForCounterService\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableWSLogForCounterService.opCUSTOMER_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string opCUSTOMER_ADDR_1 {
                get {
                    try {
                        return ((string)(this[this.tableWSLogForCounterService.opCUSTOMER_ADDR_1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'opCUSTOMER_ADDR_1\' in table \'WSLogForCounterService\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableWSLogForCounterService.opCUSTOMER_ADDR_1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string opCUSTOMER_ADDR_2 {
                get {
                    try {
                        return ((string)(this[this.tableWSLogForCounterService.opCUSTOMER_ADDR_2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'opCUSTOMER_ADDR_2\' in table \'WSLogForCounterService\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableWSLogForCounterService.opCUSTOMER_ADDR_2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string opCUSTOMER_ADDR_3 {
                get {
                    try {
                        return ((string)(this[this.tableWSLogForCounterService.opCUSTOMER_ADDR_3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'opCUSTOMER_ADDR_3\' in table \'WSLogForCounterService\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableWSLogForCounterService.opCUSTOMER_ADDR_3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string opCUSTOMER_TEL_NO {
                get {
                    try {
                        return ((string)(this[this.tableWSLogForCounterService.opCUSTOMER_TEL_NOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'opCUSTOMER_TEL_NO\' in table \'WSLogForCounterService\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableWSLogForCounterService.opCUSTOMER_TEL_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string opRETURN1 {
                get {
                    try {
                        return ((string)(this[this.tableWSLogForCounterService.opRETURN1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'opRETURN1\' in table \'WSLogForCounterService\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWSLogForCounterService.opRETURN1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string opRETURN2 {
                get {
                    try {
                        return ((string)(this[this.tableWSLogForCounterService.opRETURN2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'opRETURN2\' in table \'WSLogForCounterService\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWSLogForCounterService.opRETURN2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string opRETURN3 {
                get {
                    try {
                        return ((string)(this[this.tableWSLogForCounterService.opRETURN3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'opRETURN3\' in table \'WSLogForCounterService\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWSLogForCounterService.opRETURN3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string opAMOUNT_RECEIVED {
                get {
                    try {
                        return ((string)(this[this.tableWSLogForCounterService.opAMOUNT_RECEIVEDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'opAMOUNT_RECEIVED\' in table \'WSLogForCounterService\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableWSLogForCounterService.opAMOUNT_RECEIVEDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string opPRINT_SLIP {
                get {
                    try {
                        return ((string)(this[this.tableWSLogForCounterService.opPRINT_SLIPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'opPRINT_SLIP\' in table \'WSLogForCounterService\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWSLogForCounterService.opPRINT_SLIPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPartnerNull() {
                return this.IsNull(this.tableWSLogForCounterService.PartnerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPartnerNull() {
                this[this.tableWSLogForCounterService.PartnerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsActionNull() {
                return this.IsNull(this.tableWSLogForCounterService.ActionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetActionNull() {
                this[this.tableWSLogForCounterService.ActionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsWSNameNull() {
                return this.IsNull(this.tableWSLogForCounterService.WSNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetWSNameNull() {
                this[this.tableWSLogForCounterService.WSNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsWSMethodNull() {
                return this.IsNull(this.tableWSLogForCounterService.WSMethodColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetWSMethodNull() {
                this[this.tableWSLogForCounterService.WSMethodColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRefRowNull() {
                return this.IsNull(this.tableWSLogForCounterService.RefRowColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRefRowNull() {
                this[this.tableWSLogForCounterService.RefRowColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTX_IDNull() {
                return this.IsNull(this.tableWSLogForCounterService.TX_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTX_IDNull() {
                this[this.tableWSLogForCounterService.TX_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLOG_IDNull() {
                return this.IsNull(this.tableWSLogForCounterService.LOG_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLOG_IDNull() {
                this[this.tableWSLogForCounterService.LOG_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVENDOR_IDNull() {
                return this.IsNull(this.tableWSLogForCounterService.VENDOR_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVENDOR_IDNull() {
                this[this.tableWSLogForCounterService.VENDOR_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSERVICE_IDNull() {
                return this.IsNull(this.tableWSLogForCounterService.SERVICE_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSERVICE_IDNull() {
                this[this.tableWSLogForCounterService.SERVICE_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMETHODNull() {
                return this.IsNull(this.tableWSLogForCounterService.METHODColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMETHODNull() {
                this[this.tableWSLogForCounterService.METHODColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCOUNTER_NONull() {
                return this.IsNull(this.tableWSLogForCounterService.COUNTER_NOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCOUNTER_NONull() {
                this[this.tableWSLogForCounterService.COUNTER_NOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTERM_NONull() {
                return this.IsNull(this.tableWSLogForCounterService.TERM_NOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTERM_NONull() {
                this[this.tableWSLogForCounterService.TERM_NOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPOS_TAX_IDNull() {
                return this.IsNull(this.tableWSLogForCounterService.POS_TAX_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPOS_TAX_IDNull() {
                this[this.tableWSLogForCounterService.POS_TAX_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSERVICE_RUN_NONull() {
                return this.IsNull(this.tableWSLogForCounterService.SERVICE_RUN_NOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSERVICE_RUN_NONull() {
                this[this.tableWSLogForCounterService.SERVICE_RUN_NOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRECORD_STATUSNull() {
                return this.IsNull(this.tableWSLogForCounterService.RECORD_STATUSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRECORD_STATUSNull() {
                this[this.tableWSLogForCounterService.RECORD_STATUSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCLIENT_SERVICE_RUNNull() {
                return this.IsNull(this.tableWSLogForCounterService.CLIENT_SERVICE_RUNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCLIENT_SERVICE_RUNNull() {
                this[this.tableWSLogForCounterService.CLIENT_SERVICE_RUNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAMOUNT_RECEIVEDNull() {
                return this.IsNull(this.tableWSLogForCounterService.AMOUNT_RECEIVEDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAMOUNT_RECEIVEDNull() {
                this[this.tableWSLogForCounterService.AMOUNT_RECEIVEDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVAT_AMOUNTNull() {
                return this.IsNull(this.tableWSLogForCounterService.VAT_AMOUNTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVAT_AMOUNTNull() {
                this[this.tableWSLogForCounterService.VAT_AMOUNTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBILL_TYPENull() {
                return this.IsNull(this.tableWSLogForCounterService.BILL_TYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBILL_TYPENull() {
                this[this.tableWSLogForCounterService.BILL_TYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsREFERENCE_1Null() {
                return this.IsNull(this.tableWSLogForCounterService.REFERENCE_1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetREFERENCE_1Null() {
                this[this.tableWSLogForCounterService.REFERENCE_1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsREFERENCE_2Null() {
                return this.IsNull(this.tableWSLogForCounterService.REFERENCE_2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetREFERENCE_2Null() {
                this[this.tableWSLogForCounterService.REFERENCE_2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsREFERENCE_3Null() {
                return this.IsNull(this.tableWSLogForCounterService.REFERENCE_3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetREFERENCE_3Null() {
                this[this.tableWSLogForCounterService.REFERENCE_3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsREFERENCE_4Null() {
                return this.IsNull(this.tableWSLogForCounterService.REFERENCE_4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetREFERENCE_4Null() {
                this[this.tableWSLogForCounterService.REFERENCE_4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCUSTOMER_NAMENull() {
                return this.IsNull(this.tableWSLogForCounterService.CUSTOMER_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCUSTOMER_NAMENull() {
                this[this.tableWSLogForCounterService.CUSTOMER_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCUSTOMER_ADDR_1Null() {
                return this.IsNull(this.tableWSLogForCounterService.CUSTOMER_ADDR_1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCUSTOMER_ADDR_1Null() {
                this[this.tableWSLogForCounterService.CUSTOMER_ADDR_1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCUSTOMER_ADDR_2Null() {
                return this.IsNull(this.tableWSLogForCounterService.CUSTOMER_ADDR_2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCUSTOMER_ADDR_2Null() {
                this[this.tableWSLogForCounterService.CUSTOMER_ADDR_2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCUSTOMER_ADDR_3Null() {
                return this.IsNull(this.tableWSLogForCounterService.CUSTOMER_ADDR_3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCUSTOMER_ADDR_3Null() {
                this[this.tableWSLogForCounterService.CUSTOMER_ADDR_3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCUSTOMER_TEL_NONull() {
                return this.IsNull(this.tableWSLogForCounterService.CUSTOMER_TEL_NOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCUSTOMER_TEL_NONull() {
                this[this.tableWSLogForCounterService.CUSTOMER_TEL_NOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsZONENull() {
                return this.IsNull(this.tableWSLogForCounterService.ZONEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetZONENull() {
                this[this.tableWSLogForCounterService.ZONEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsR_SERVICE_RUNNONull() {
                return this.IsNull(this.tableWSLogForCounterService.R_SERVICE_RUNNOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetR_SERVICE_RUNNONull() {
                this[this.tableWSLogForCounterService.R_SERVICE_RUNNOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCANCEL_OPERATINGNull() {
                return this.IsNull(this.tableWSLogForCounterService.CANCEL_OPERATINGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCANCEL_OPERATINGNull() {
                this[this.tableWSLogForCounterService.CANCEL_OPERATINGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOPERATE_BY_STAFFNull() {
                return this.IsNull(this.tableWSLogForCounterService.OPERATE_BY_STAFFColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOPERATE_BY_STAFFNull() {
                this[this.tableWSLogForCounterService.OPERATE_BY_STAFFColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSYSTEM_DATE_TIMENull() {
                return this.IsNull(this.tableWSLogForCounterService.SYSTEM_DATE_TIMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSYSTEM_DATE_TIMENull() {
                this[this.tableWSLogForCounterService.SYSTEM_DATE_TIMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUSERIDNull() {
                return this.IsNull(this.tableWSLogForCounterService.USERIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUSERIDNull() {
                this[this.tableWSLogForCounterService.USERIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPASSWORDNull() {
                return this.IsNull(this.tableWSLogForCounterService.PASSWORDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPASSWORDNull() {
                this[this.tableWSLogForCounterService.PASSWORDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsopTX_IDNull() {
                return this.IsNull(this.tableWSLogForCounterService.opTX_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetopTX_IDNull() {
                this[this.tableWSLogForCounterService.opTX_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsopLOG_IDNull() {
                return this.IsNull(this.tableWSLogForCounterService.opLOG_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetopLOG_IDNull() {
                this[this.tableWSLogForCounterService.opLOG_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsopVENDOR_IDNull() {
                return this.IsNull(this.tableWSLogForCounterService.opVENDOR_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetopVENDOR_IDNull() {
                this[this.tableWSLogForCounterService.opVENDOR_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsopSERVICE_IDNull() {
                return this.IsNull(this.tableWSLogForCounterService.opSERVICE_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetopSERVICE_IDNull() {
                this[this.tableWSLogForCounterService.opSERVICE_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsopMETHODNull() {
                return this.IsNull(this.tableWSLogForCounterService.opMETHODColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetopMETHODNull() {
                this[this.tableWSLogForCounterService.opMETHODColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsopSUCCESSNull() {
                return this.IsNull(this.tableWSLogForCounterService.opSUCCESSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetopSUCCESSNull() {
                this[this.tableWSLogForCounterService.opSUCCESSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsopCODENull() {
                return this.IsNull(this.tableWSLogForCounterService.opCODEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetopCODENull() {
                this[this.tableWSLogForCounterService.opCODEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsopDESCNull() {
                return this.IsNull(this.tableWSLogForCounterService.opDESCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetopDESCNull() {
                this[this.tableWSLogForCounterService.opDESCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsopREFERENCE_1Null() {
                return this.IsNull(this.tableWSLogForCounterService.opREFERENCE_1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetopREFERENCE_1Null() {
                this[this.tableWSLogForCounterService.opREFERENCE_1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsopREFERENCE_2Null() {
                return this.IsNull(this.tableWSLogForCounterService.opREFERENCE_2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetopREFERENCE_2Null() {
                this[this.tableWSLogForCounterService.opREFERENCE_2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsopREFERENCE_3Null() {
                return this.IsNull(this.tableWSLogForCounterService.opREFERENCE_3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetopREFERENCE_3Null() {
                this[this.tableWSLogForCounterService.opREFERENCE_3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsopREFERENCE_4Null() {
                return this.IsNull(this.tableWSLogForCounterService.opREFERENCE_4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetopREFERENCE_4Null() {
                this[this.tableWSLogForCounterService.opREFERENCE_4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsopCUSTOMER_NAMENull() {
                return this.IsNull(this.tableWSLogForCounterService.opCUSTOMER_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetopCUSTOMER_NAMENull() {
                this[this.tableWSLogForCounterService.opCUSTOMER_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsopCUSTOMER_ADDR_1Null() {
                return this.IsNull(this.tableWSLogForCounterService.opCUSTOMER_ADDR_1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetopCUSTOMER_ADDR_1Null() {
                this[this.tableWSLogForCounterService.opCUSTOMER_ADDR_1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsopCUSTOMER_ADDR_2Null() {
                return this.IsNull(this.tableWSLogForCounterService.opCUSTOMER_ADDR_2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetopCUSTOMER_ADDR_2Null() {
                this[this.tableWSLogForCounterService.opCUSTOMER_ADDR_2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsopCUSTOMER_ADDR_3Null() {
                return this.IsNull(this.tableWSLogForCounterService.opCUSTOMER_ADDR_3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetopCUSTOMER_ADDR_3Null() {
                this[this.tableWSLogForCounterService.opCUSTOMER_ADDR_3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsopCUSTOMER_TEL_NONull() {
                return this.IsNull(this.tableWSLogForCounterService.opCUSTOMER_TEL_NOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetopCUSTOMER_TEL_NONull() {
                this[this.tableWSLogForCounterService.opCUSTOMER_TEL_NOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsopRETURN1Null() {
                return this.IsNull(this.tableWSLogForCounterService.opRETURN1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetopRETURN1Null() {
                this[this.tableWSLogForCounterService.opRETURN1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsopRETURN2Null() {
                return this.IsNull(this.tableWSLogForCounterService.opRETURN2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetopRETURN2Null() {
                this[this.tableWSLogForCounterService.opRETURN2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsopRETURN3Null() {
                return this.IsNull(this.tableWSLogForCounterService.opRETURN3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetopRETURN3Null() {
                this[this.tableWSLogForCounterService.opRETURN3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsopAMOUNT_RECEIVEDNull() {
                return this.IsNull(this.tableWSLogForCounterService.opAMOUNT_RECEIVEDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetopAMOUNT_RECEIVEDNull() {
                this[this.tableWSLogForCounterService.opAMOUNT_RECEIVEDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsopPRINT_SLIPNull() {
                return this.IsNull(this.tableWSLogForCounterService.opPRINT_SLIPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetopPRINT_SLIPNull() {
                this[this.tableWSLogForCounterService.opPRINT_SLIPColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class WSLogRowChangeEvent : global::System.EventArgs {
            
            private WSLogRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public WSLogRowChangeEvent(WSLogRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public WSLogRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class RefRunningTBRowChangeEvent : global::System.EventArgs {
            
            private RefRunningTBRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RefRunningTBRowChangeEvent(RefRunningTBRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RefRunningTBRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class RefRunningTBForCounterServiceRowChangeEvent : global::System.EventArgs {
            
            private RefRunningTBForCounterServiceRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RefRunningTBForCounterServiceRowChangeEvent(RefRunningTBForCounterServiceRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RefRunningTBForCounterServiceRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class WSLogForCounterServiceRowChangeEvent : global::System.EventArgs {
            
            private WSLogForCounterServiceRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public WSLogForCounterServiceRowChangeEvent(WSLogForCounterServiceRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public WSLogForCounterServiceRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace MTLNETWebServices.App_Code.DAL.MTL_WSLOGTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class WSLogTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public WSLogTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "WSLog";
            tableMapping.ColumnMappings.Add("rid", "rid");
            tableMapping.ColumnMappings.Add("Partner", "Partner");
            tableMapping.ColumnMappings.Add("IPaddress", "IPaddress");
            tableMapping.ColumnMappings.Add("Action", "Action");
            tableMapping.ColumnMappings.Add("LogDateTime", "LogDateTime");
            tableMapping.ColumnMappings.Add("WSName", "WSName");
            tableMapping.ColumnMappings.Add("WSMethod", "WSMethod");
            tableMapping.ColumnMappings.Add("Detail", "Detail");
            tableMapping.ColumnMappings.Add("RefRow", "RefRow");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [WSLog] WHERE (([rid] = @Original_rid))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_rid", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "rid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [WSLog] ([Partner], [IPaddress], [Action], [LogDateTime], [WSName], [" +
                "WSMethod], [Detail], [RefRow]) VALUES (@Partner, @IPaddress, @Action, @LogDateTi" +
                "me, @WSName, @WSMethod, @Detail, @RefRow)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Partner", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Partner", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IPaddress", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IPaddress", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Action", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Action", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LogDateTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LogDateTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WSName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WSName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WSMethod", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WSMethod", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Detail", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Detail", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RefRow", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RefRow", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [WSLog] SET [Partner] = @Partner, [IPaddress] = @IPaddress, [Action] = @Ac" +
                "tion, [LogDateTime] = @LogDateTime, [WSName] = @WSName, [WSMethod] = @WSMethod, " +
                "[Detail] = @Detail, [RefRow] = @RefRow WHERE (([rid] = @Original_rid))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Partner", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Partner", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IPaddress", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IPaddress", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Action", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Action", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LogDateTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LogDateTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WSName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WSName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WSMethod", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WSMethod", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Detail", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Detail", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RefRow", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RefRow", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_rid", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "rid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["MTL_WSLOGConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT     rid, Partner, IPaddress, Action, LogDateTime, WSName, WSMethod, Detail" +
                ", RefRow\r\nFROM         WSLog";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "INSERT INTO WSLog\r\n                      (Partner, IPaddress, Action, LogDateTime" +
                ", WSName, WSMethod, Detail, RefRow)\r\nVALUES     (@Partner,@IPaddress,@Action, GE" +
                "TDATE(),@WSName,@WSMethod,@Detail, @RefRow); \r\n\r\nSELECT SCOPE_IDENTITY()";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Partner", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, "Partner", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IPaddress", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "IPaddress", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Action", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "Action", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WSName", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, "WSName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WSMethod", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, "WSMethod", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Detail", global::System.Data.SqlDbType.VarChar, 1000, global::System.Data.ParameterDirection.Input, 0, 0, "Detail", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RefRow", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "RefRow", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(MTL_WSLOG.WSLogDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual MTL_WSLOG.WSLogDataTable GetWSLogs() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            MTL_WSLOG.WSLogDataTable dataTable = new MTL_WSLOG.WSLogDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(MTL_WSLOG.WSLogDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(MTL_WSLOG dataSet) {
            return this.Adapter.Update(dataSet, "WSLog");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_rid) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_rid));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string Partner, string IPaddress, string Action, System.DateTime LogDateTime, string WSName, string WSMethod, string Detail, global::System.Nullable<int> RefRow) {
            if ((Partner == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Partner));
            }
            if ((IPaddress == null)) {
                throw new global::System.ArgumentNullException("IPaddress");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(IPaddress));
            }
            if ((Action == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Action));
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(LogDateTime));
            if ((WSName == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(WSName));
            }
            if ((WSMethod == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(WSMethod));
            }
            if ((Detail == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(Detail));
            }
            if ((RefRow.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((int)(RefRow.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Partner, string IPaddress, string Action, System.DateTime LogDateTime, string WSName, string WSMethod, string Detail, global::System.Nullable<int> RefRow, int Original_rid) {
            if ((Partner == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Partner));
            }
            if ((IPaddress == null)) {
                throw new global::System.ArgumentNullException("IPaddress");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(IPaddress));
            }
            if ((Action == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Action));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(LogDateTime));
            if ((WSName == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(WSName));
            }
            if ((WSMethod == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(WSMethod));
            }
            if ((Detail == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Detail));
            }
            if ((RefRow.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(RefRow.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Original_rid));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, false)]
        public virtual int InsertWSLog(string Partner, string IPaddress, string Action, string WSName, string WSMethod, string Detail, global::System.Nullable<int> RefRow) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[1];
            if ((Partner == null)) {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[0].Value = ((string)(Partner));
            }
            if ((IPaddress == null)) {
                throw new global::System.ArgumentNullException("IPaddress");
            }
            else {
                command.Parameters[1].Value = ((string)(IPaddress));
            }
            if ((Action == null)) {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[2].Value = ((string)(Action));
            }
            if ((WSName == null)) {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[3].Value = ((string)(WSName));
            }
            if ((WSMethod == null)) {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[4].Value = ((string)(WSMethod));
            }
            if ((Detail == null)) {
                command.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[5].Value = ((string)(Detail));
            }
            if ((RefRow.HasValue == true)) {
                command.Parameters[6].Value = ((int)(RefRow.Value));
            }
            else {
                command.Parameters[6].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class RefRunningTBTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public RefRunningTBTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "RefRunningTB";
            tableMapping.ColumnMappings.Add("rid", "rid");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [MTL_WSLOG].[dbo].[refRunningTB] WHERE (([rid] = @Original_rid))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_rid", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "rid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [MTL_WSLOG].[dbo].[refRunningTB] DEFAULT VALUES";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["MTL_WSLOGConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[3];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT [rid]\r\n  FROM [MTL_WSLOG].[dbo].[refRunningTB]";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT        MAX(rid) AS Expr1\r\nFROM            RefRunningTB";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "INSERT INTO [MTL_WSLOG].[dbo].[refRunningTB] DEFAULT VALUES ;\r\nSELECT SCOPE_IDENT" +
                "ITY();  \r\n";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(MTL_WSLOG.RefRunningTBDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual MTL_WSLOG.RefRunningTBDataTable GetRefRunningTBs() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            MTL_WSLOG.RefRunningTBDataTable dataTable = new MTL_WSLOG.RefRunningTBDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(MTL_WSLOG.RefRunningTBDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(MTL_WSLOG dataSet) {
            return this.Adapter.Update(dataSet, "RefRunningTB");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_rid) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_rid));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert() {
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual global::System.Nullable<int> GetMaxRefRunningTB() {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[1];
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return new global::System.Nullable<int>();
            }
            else {
                return new global::System.Nullable<int>(((int)(returnValue)));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual object InsertRefRunningTB() {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[2];
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return null;
            }
            else {
                return ((object)(returnValue));
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class RefRunningTBForCounterServiceTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public RefRunningTBForCounterServiceTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "RefRunningTBForCounterService";
            tableMapping.ColumnMappings.Add("rid", "rid");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [MTL_WSLOG].[dbo].[RefRunningTBForCounterService] WHERE (([rid] = @Or" +
                "iginal_rid))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_rid", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "rid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [MTL_WSLOG].[dbo].[RefRunningTBForCounterService] DEFAULT VALUES";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["MTL_WSLOGConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[3];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT [rid]\r\n  FROM [MTL_WSLOG].[dbo].[RefRunningTBForCounterService]\r\n";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT MAX(rid) AS Expr1 FROM RefRunningTBForCounterService\r\n";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "INSERT INTO [MTL_WSLOG].[dbo].[RefRunningTBForCounterService] DEFAULT VALUES;\r\n\r\n" +
                "SELECT SCOPE_IDENTITY();  ";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(MTL_WSLOG.RefRunningTBForCounterServiceDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual MTL_WSLOG.RefRunningTBForCounterServiceDataTable GetRefRunningTBsForCounterService() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            MTL_WSLOG.RefRunningTBForCounterServiceDataTable dataTable = new MTL_WSLOG.RefRunningTBForCounterServiceDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(MTL_WSLOG.RefRunningTBForCounterServiceDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(MTL_WSLOG dataSet) {
            return this.Adapter.Update(dataSet, "RefRunningTBForCounterService");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_rid) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_rid));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert() {
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual object GetMaxRefRunningTBForCounterService() {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[1];
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return null;
            }
            else {
                return ((object)(returnValue));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, false)]
        public virtual object InsertRefRunningTBForCounterService() {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[2];
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return null;
            }
            else {
                return ((object)(returnValue));
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class WSLogForCounterServiceTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public WSLogForCounterServiceTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "WSLogForCounterService";
            tableMapping.ColumnMappings.Add("rid", "rid");
            tableMapping.ColumnMappings.Add("Partner", "Partner");
            tableMapping.ColumnMappings.Add("IPaddress", "IPaddress");
            tableMapping.ColumnMappings.Add("Action", "Action");
            tableMapping.ColumnMappings.Add("LogDateTime", "LogDateTime");
            tableMapping.ColumnMappings.Add("WSName", "WSName");
            tableMapping.ColumnMappings.Add("WSMethod", "WSMethod");
            tableMapping.ColumnMappings.Add("RefRow", "RefRow");
            tableMapping.ColumnMappings.Add("TX_ID", "TX_ID");
            tableMapping.ColumnMappings.Add("LOG_ID", "LOG_ID");
            tableMapping.ColumnMappings.Add("VENDOR_ID", "VENDOR_ID");
            tableMapping.ColumnMappings.Add("SERVICE_ID", "SERVICE_ID");
            tableMapping.ColumnMappings.Add("METHOD", "METHOD");
            tableMapping.ColumnMappings.Add("COUNTER_NO", "COUNTER_NO");
            tableMapping.ColumnMappings.Add("TERM_NO", "TERM_NO");
            tableMapping.ColumnMappings.Add("POS_TAX_ID", "POS_TAX_ID");
            tableMapping.ColumnMappings.Add("SERVICE_RUN_NO", "SERVICE_RUN_NO");
            tableMapping.ColumnMappings.Add("RECORD_STATUS", "RECORD_STATUS");
            tableMapping.ColumnMappings.Add("CLIENT_SERVICE_RUN", "CLIENT_SERVICE_RUN");
            tableMapping.ColumnMappings.Add("AMOUNT_RECEIVED", "AMOUNT_RECEIVED");
            tableMapping.ColumnMappings.Add("VAT_AMOUNT", "VAT_AMOUNT");
            tableMapping.ColumnMappings.Add("BILL_TYPE", "BILL_TYPE");
            tableMapping.ColumnMappings.Add("REFERENCE_1", "REFERENCE_1");
            tableMapping.ColumnMappings.Add("REFERENCE_2", "REFERENCE_2");
            tableMapping.ColumnMappings.Add("REFERENCE_3", "REFERENCE_3");
            tableMapping.ColumnMappings.Add("REFERENCE_4", "REFERENCE_4");
            tableMapping.ColumnMappings.Add("CUSTOMER_NAME", "CUSTOMER_NAME");
            tableMapping.ColumnMappings.Add("CUSTOMER_ADDR_1", "CUSTOMER_ADDR_1");
            tableMapping.ColumnMappings.Add("CUSTOMER_ADDR_2", "CUSTOMER_ADDR_2");
            tableMapping.ColumnMappings.Add("CUSTOMER_ADDR_3", "CUSTOMER_ADDR_3");
            tableMapping.ColumnMappings.Add("CUSTOMER_TEL_NO", "CUSTOMER_TEL_NO");
            tableMapping.ColumnMappings.Add("ZONE", "ZONE");
            tableMapping.ColumnMappings.Add("R_SERVICE_RUNNO", "R_SERVICE_RUNNO");
            tableMapping.ColumnMappings.Add("CANCEL_OPERATING", "CANCEL_OPERATING");
            tableMapping.ColumnMappings.Add("OPERATE_BY_STAFF", "OPERATE_BY_STAFF");
            tableMapping.ColumnMappings.Add("SYSTEM_DATE_TIME", "SYSTEM_DATE_TIME");
            tableMapping.ColumnMappings.Add("USERID", "USERID");
            tableMapping.ColumnMappings.Add("PASSWORD", "PASSWORD");
            tableMapping.ColumnMappings.Add("opTX_ID", "opTX_ID");
            tableMapping.ColumnMappings.Add("opLOG_ID", "opLOG_ID");
            tableMapping.ColumnMappings.Add("opVENDOR_ID", "opVENDOR_ID");
            tableMapping.ColumnMappings.Add("opSERVICE_ID", "opSERVICE_ID");
            tableMapping.ColumnMappings.Add("opMETHOD", "opMETHOD");
            tableMapping.ColumnMappings.Add("opSUCCESS", "opSUCCESS");
            tableMapping.ColumnMappings.Add("opCODE", "opCODE");
            tableMapping.ColumnMappings.Add("opDESC", "opDESC");
            tableMapping.ColumnMappings.Add("opREFERENCE_1", "opREFERENCE_1");
            tableMapping.ColumnMappings.Add("opREFERENCE_2", "opREFERENCE_2");
            tableMapping.ColumnMappings.Add("opREFERENCE_3", "opREFERENCE_3");
            tableMapping.ColumnMappings.Add("opREFERENCE_4", "opREFERENCE_4");
            tableMapping.ColumnMappings.Add("opCUSTOMER_NAME", "opCUSTOMER_NAME");
            tableMapping.ColumnMappings.Add("opCUSTOMER_ADDR_1", "opCUSTOMER_ADDR_1");
            tableMapping.ColumnMappings.Add("opCUSTOMER_ADDR_2", "opCUSTOMER_ADDR_2");
            tableMapping.ColumnMappings.Add("opCUSTOMER_ADDR_3", "opCUSTOMER_ADDR_3");
            tableMapping.ColumnMappings.Add("opCUSTOMER_TEL_NO", "opCUSTOMER_TEL_NO");
            tableMapping.ColumnMappings.Add("opRETURN1", "opRETURN1");
            tableMapping.ColumnMappings.Add("opRETURN2", "opRETURN2");
            tableMapping.ColumnMappings.Add("opRETURN3", "opRETURN3");
            tableMapping.ColumnMappings.Add("opAMOUNT_RECEIVED", "opAMOUNT_RECEIVED");
            tableMapping.ColumnMappings.Add("opPRINT_SLIP", "opPRINT_SLIP");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [MTL_WSLOG].[dbo].[WSLogForCounterService] WHERE (([rid] = @Original_" +
                "rid))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_rid", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "rid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [MTL_WSLOG].[dbo].[WSLogForCounterService] ([Partner], [IPaddress], [" +
                "Action], [LogDateTime], [WSName], [WSMethod], [RefRow], [TX_ID], [LOG_ID], [VEND" +
                "OR_ID], [SERVICE_ID], [METHOD], [COUNTER_NO], [TERM_NO], [POS_TAX_ID], [SERVICE_" +
                "RUN_NO], [RECORD_STATUS], [CLIENT_SERVICE_RUN], [AMOUNT_RECEIVED], [VAT_AMOUNT]," +
                " [BILL_TYPE], [REFERENCE_1], [REFERENCE_2], [REFERENCE_3], [REFERENCE_4], [CUSTO" +
                "MER_NAME], [CUSTOMER_ADDR_1], [CUSTOMER_ADDR_2], [CUSTOMER_ADDR_3], [CUSTOMER_TE" +
                "L_NO], [ZONE], [R_SERVICE_RUNNO], [CANCEL_OPERATING], [OPERATE_BY_STAFF], [SYSTE" +
                "M_DATE_TIME], [USERID], [PASSWORD], [opTX_ID], [opLOG_ID], [opVENDOR_ID], [opSER" +
                "VICE_ID], [opMETHOD], [opSUCCESS], [opCODE], [opDESC], [opREFERENCE_1], [opREFER" +
                "ENCE_2], [opREFERENCE_3], [opREFERENCE_4], [opCUSTOMER_NAME], [opCUSTOMER_ADDR_1" +
                "], [opCUSTOMER_ADDR_2], [opCUSTOMER_ADDR_3], [opCUSTOMER_TEL_NO], [opRETURN1], [" +
                "opRETURN2], [opRETURN3], [opAMOUNT_RECEIVED], [opPRINT_SLIP]) VALUES (@Partner, " +
                "@IPaddress, @Action, @LogDateTime, @WSName, @WSMethod, @RefRow, @TX_ID, @LOG_ID," +
                " @VENDOR_ID, @SERVICE_ID, @METHOD, @COUNTER_NO, @TERM_NO, @POS_TAX_ID, @SERVICE_" +
                "RUN_NO, @RECORD_STATUS, @CLIENT_SERVICE_RUN, @AMOUNT_RECEIVED, @VAT_AMOUNT, @BIL" +
                "L_TYPE, @REFERENCE_1, @REFERENCE_2, @REFERENCE_3, @REFERENCE_4, @CUSTOMER_NAME, " +
                "@CUSTOMER_ADDR_1, @CUSTOMER_ADDR_2, @CUSTOMER_ADDR_3, @CUSTOMER_TEL_NO, @ZONE, @" +
                "R_SERVICE_RUNNO, @CANCEL_OPERATING, @OPERATE_BY_STAFF, @SYSTEM_DATE_TIME, @USERI" +
                "D, @PASSWORD, @opTX_ID, @opLOG_ID, @opVENDOR_ID, @opSERVICE_ID, @opMETHOD, @opSU" +
                "CCESS, @opCODE, @opDESC, @opREFERENCE_1, @opREFERENCE_2, @opREFERENCE_3, @opREFE" +
                "RENCE_4, @opCUSTOMER_NAME, @opCUSTOMER_ADDR_1, @opCUSTOMER_ADDR_2, @opCUSTOMER_A" +
                "DDR_3, @opCUSTOMER_TEL_NO, @opRETURN1, @opRETURN2, @opRETURN3, @opAMOUNT_RECEIVE" +
                "D, @opPRINT_SLIP)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Partner", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Partner", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IPaddress", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IPaddress", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Action", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Action", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LogDateTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LogDateTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WSName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WSName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WSMethod", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WSMethod", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RefRow", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RefRow", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TX_ID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TX_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LOG_ID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LOG_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VENDOR_ID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VENDOR_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SERVICE_ID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SERVICE_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@METHOD", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "METHOD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COUNTER_NO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COUNTER_NO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TERM_NO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TERM_NO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@POS_TAX_ID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "POS_TAX_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SERVICE_RUN_NO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SERVICE_RUN_NO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RECORD_STATUS", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RECORD_STATUS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CLIENT_SERVICE_RUN", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CLIENT_SERVICE_RUN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AMOUNT_RECEIVED", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AMOUNT_RECEIVED", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VAT_AMOUNT", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VAT_AMOUNT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BILL_TYPE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BILL_TYPE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@REFERENCE_1", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "REFERENCE_1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@REFERENCE_2", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "REFERENCE_2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@REFERENCE_3", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "REFERENCE_3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@REFERENCE_4", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "REFERENCE_4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CUSTOMER_NAME", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER_NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CUSTOMER_ADDR_1", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER_ADDR_1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CUSTOMER_ADDR_2", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER_ADDR_2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CUSTOMER_ADDR_3", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER_ADDR_3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CUSTOMER_TEL_NO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER_TEL_NO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ZONE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ZONE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@R_SERVICE_RUNNO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "R_SERVICE_RUNNO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CANCEL_OPERATING", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CANCEL_OPERATING", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OPERATE_BY_STAFF", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OPERATE_BY_STAFF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SYSTEM_DATE_TIME", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SYSTEM_DATE_TIME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@USERID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USERID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PASSWORD", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PASSWORD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@opTX_ID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "opTX_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@opLOG_ID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "opLOG_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@opVENDOR_ID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "opVENDOR_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@opSERVICE_ID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "opSERVICE_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@opMETHOD", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "opMETHOD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@opSUCCESS", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "opSUCCESS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@opCODE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "opCODE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@opDESC", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "opDESC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@opREFERENCE_1", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "opREFERENCE_1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@opREFERENCE_2", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "opREFERENCE_2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@opREFERENCE_3", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "opREFERENCE_3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@opREFERENCE_4", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "opREFERENCE_4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@opCUSTOMER_NAME", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "opCUSTOMER_NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@opCUSTOMER_ADDR_1", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "opCUSTOMER_ADDR_1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@opCUSTOMER_ADDR_2", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "opCUSTOMER_ADDR_2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@opCUSTOMER_ADDR_3", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "opCUSTOMER_ADDR_3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@opCUSTOMER_TEL_NO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "opCUSTOMER_TEL_NO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@opRETURN1", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "opRETURN1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@opRETURN2", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "opRETURN2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@opRETURN3", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "opRETURN3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@opAMOUNT_RECEIVED", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "opAMOUNT_RECEIVED", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@opPRINT_SLIP", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "opPRINT_SLIP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [MTL_WSLOG].[dbo].[WSLogForCounterService] SET [Partner] = @Partner, [IPad" +
                "dress] = @IPaddress, [Action] = @Action, [LogDateTime] = @LogDateTime, [WSName] " +
                "= @WSName, [WSMethod] = @WSMethod, [RefRow] = @RefRow, [TX_ID] = @TX_ID, [LOG_ID" +
                "] = @LOG_ID, [VENDOR_ID] = @VENDOR_ID, [SERVICE_ID] = @SERVICE_ID, [METHOD] = @M" +
                "ETHOD, [COUNTER_NO] = @COUNTER_NO, [TERM_NO] = @TERM_NO, [POS_TAX_ID] = @POS_TAX" +
                "_ID, [SERVICE_RUN_NO] = @SERVICE_RUN_NO, [RECORD_STATUS] = @RECORD_STATUS, [CLIE" +
                "NT_SERVICE_RUN] = @CLIENT_SERVICE_RUN, [AMOUNT_RECEIVED] = @AMOUNT_RECEIVED, [VA" +
                "T_AMOUNT] = @VAT_AMOUNT, [BILL_TYPE] = @BILL_TYPE, [REFERENCE_1] = @REFERENCE_1," +
                " [REFERENCE_2] = @REFERENCE_2, [REFERENCE_3] = @REFERENCE_3, [REFERENCE_4] = @RE" +
                "FERENCE_4, [CUSTOMER_NAME] = @CUSTOMER_NAME, [CUSTOMER_ADDR_1] = @CUSTOMER_ADDR_" +
                "1, [CUSTOMER_ADDR_2] = @CUSTOMER_ADDR_2, [CUSTOMER_ADDR_3] = @CUSTOMER_ADDR_3, [" +
                "CUSTOMER_TEL_NO] = @CUSTOMER_TEL_NO, [ZONE] = @ZONE, [R_SERVICE_RUNNO] = @R_SERV" +
                "ICE_RUNNO, [CANCEL_OPERATING] = @CANCEL_OPERATING, [OPERATE_BY_STAFF] = @OPERATE" +
                "_BY_STAFF, [SYSTEM_DATE_TIME] = @SYSTEM_DATE_TIME, [USERID] = @USERID, [PASSWORD" +
                "] = @PASSWORD, [opTX_ID] = @opTX_ID, [opLOG_ID] = @opLOG_ID, [opVENDOR_ID] = @op" +
                "VENDOR_ID, [opSERVICE_ID] = @opSERVICE_ID, [opMETHOD] = @opMETHOD, [opSUCCESS] =" +
                " @opSUCCESS, [opCODE] = @opCODE, [opDESC] = @opDESC, [opREFERENCE_1] = @opREFERE" +
                "NCE_1, [opREFERENCE_2] = @opREFERENCE_2, [opREFERENCE_3] = @opREFERENCE_3, [opRE" +
                "FERENCE_4] = @opREFERENCE_4, [opCUSTOMER_NAME] = @opCUSTOMER_NAME, [opCUSTOMER_A" +
                "DDR_1] = @opCUSTOMER_ADDR_1, [opCUSTOMER_ADDR_2] = @opCUSTOMER_ADDR_2, [opCUSTOM" +
                "ER_ADDR_3] = @opCUSTOMER_ADDR_3, [opCUSTOMER_TEL_NO] = @opCUSTOMER_TEL_NO, [opRE" +
                "TURN1] = @opRETURN1, [opRETURN2] = @opRETURN2, [opRETURN3] = @opRETURN3, [opAMOU" +
                "NT_RECEIVED] = @opAMOUNT_RECEIVED, [opPRINT_SLIP] = @opPRINT_SLIP WHERE (([rid] " +
                "= @Original_rid))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Partner", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Partner", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IPaddress", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IPaddress", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Action", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Action", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LogDateTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LogDateTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WSName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WSName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WSMethod", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WSMethod", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RefRow", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RefRow", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TX_ID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TX_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LOG_ID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LOG_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VENDOR_ID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VENDOR_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SERVICE_ID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SERVICE_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@METHOD", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "METHOD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COUNTER_NO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COUNTER_NO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TERM_NO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TERM_NO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@POS_TAX_ID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "POS_TAX_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SERVICE_RUN_NO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SERVICE_RUN_NO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RECORD_STATUS", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RECORD_STATUS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CLIENT_SERVICE_RUN", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CLIENT_SERVICE_RUN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AMOUNT_RECEIVED", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AMOUNT_RECEIVED", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VAT_AMOUNT", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VAT_AMOUNT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BILL_TYPE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BILL_TYPE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@REFERENCE_1", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "REFERENCE_1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@REFERENCE_2", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "REFERENCE_2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@REFERENCE_3", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "REFERENCE_3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@REFERENCE_4", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "REFERENCE_4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CUSTOMER_NAME", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER_NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CUSTOMER_ADDR_1", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER_ADDR_1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CUSTOMER_ADDR_2", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER_ADDR_2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CUSTOMER_ADDR_3", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER_ADDR_3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CUSTOMER_TEL_NO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER_TEL_NO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ZONE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ZONE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@R_SERVICE_RUNNO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "R_SERVICE_RUNNO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CANCEL_OPERATING", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CANCEL_OPERATING", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OPERATE_BY_STAFF", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OPERATE_BY_STAFF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SYSTEM_DATE_TIME", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SYSTEM_DATE_TIME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@USERID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USERID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PASSWORD", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PASSWORD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@opTX_ID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "opTX_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@opLOG_ID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "opLOG_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@opVENDOR_ID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "opVENDOR_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@opSERVICE_ID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "opSERVICE_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@opMETHOD", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "opMETHOD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@opSUCCESS", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "opSUCCESS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@opCODE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "opCODE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@opDESC", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "opDESC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@opREFERENCE_1", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "opREFERENCE_1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@opREFERENCE_2", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "opREFERENCE_2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@opREFERENCE_3", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "opREFERENCE_3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@opREFERENCE_4", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "opREFERENCE_4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@opCUSTOMER_NAME", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "opCUSTOMER_NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@opCUSTOMER_ADDR_1", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "opCUSTOMER_ADDR_1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@opCUSTOMER_ADDR_2", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "opCUSTOMER_ADDR_2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@opCUSTOMER_ADDR_3", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "opCUSTOMER_ADDR_3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@opCUSTOMER_TEL_NO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "opCUSTOMER_TEL_NO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@opRETURN1", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "opRETURN1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@opRETURN2", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "opRETURN2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@opRETURN3", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "opRETURN3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@opAMOUNT_RECEIVED", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "opAMOUNT_RECEIVED", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@opPRINT_SLIP", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "opPRINT_SLIP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_rid", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "rid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["MTL_WSLOGConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[4];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT [rid]
      ,[Partner]
      ,[IPaddress]
      ,[Action]
      ,[LogDateTime]
      ,[WSName]
      ,[WSMethod]
      ,[RefRow]
      ,[TX_ID]
      ,[LOG_ID]
      ,[VENDOR_ID]
      ,[SERVICE_ID]
      ,[METHOD]
      ,[COUNTER_NO]
      ,[TERM_NO]
      ,[POS_TAX_ID]
      ,[SERVICE_RUN_NO]
      ,[RECORD_STATUS]
      ,[CLIENT_SERVICE_RUN]
      ,[AMOUNT_RECEIVED]
      ,[VAT_AMOUNT]
      ,[BILL_TYPE]
      ,[REFERENCE_1]
      ,[REFERENCE_2]
      ,[REFERENCE_3]
      ,[REFERENCE_4]
      ,[CUSTOMER_NAME]
      ,[CUSTOMER_ADDR_1]
      ,[CUSTOMER_ADDR_2]
      ,[CUSTOMER_ADDR_3]
      ,[CUSTOMER_TEL_NO]
      ,[ZONE]
      ,[R_SERVICE_RUNNO]
      ,[CANCEL_OPERATING]
      ,[OPERATE_BY_STAFF]
      ,[SYSTEM_DATE_TIME]
      ,[USERID]
      ,[PASSWORD]
      ,[opTX_ID]
      ,[opLOG_ID]
      ,[opVENDOR_ID]
      ,[opSERVICE_ID]
      ,[opMETHOD]
      ,[opSUCCESS]
      ,[opCODE]
      ,[opDESC]
      ,[opREFERENCE_1]
      ,[opREFERENCE_2]
      ,[opREFERENCE_3]
      ,[opREFERENCE_4]
      ,[opCUSTOMER_NAME]
      ,[opCUSTOMER_ADDR_1]
      ,[opCUSTOMER_ADDR_2]
      ,[opCUSTOMER_ADDR_3]
      ,[opCUSTOMER_TEL_NO]
      ,[opRETURN1]
      ,[opRETURN2]
      ,[opRETURN3]
      ,[opAMOUNT_RECEIVED]
      ,[opPRINT_SLIP]
  FROM [MTL_WSLOG].[dbo].[WSLogForCounterService]
";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"INSERT INTO [MTL_WSLOG].[dbo].[WSLogForCounterService] ([Partner], [IPaddress], [Action], [LogDateTime], [WSName], [WSMethod], [RefRow], [TX_ID], [LOG_ID], [VENDOR_ID], [SERVICE_ID], [METHOD], [COUNTER_NO], [TERM_NO], [POS_TAX_ID], [SERVICE_RUN_NO], [RECORD_STATUS], [CLIENT_SERVICE_RUN], [AMOUNT_RECEIVED], [VAT_AMOUNT], [BILL_TYPE], [REFERENCE_1], [REFERENCE_2], [REFERENCE_3], [REFERENCE_4], [CUSTOMER_NAME], [CUSTOMER_ADDR_1], [CUSTOMER_ADDR_2], [CUSTOMER_ADDR_3], [CUSTOMER_TEL_NO], [ZONE], [R_SERVICE_RUNNO], [CANCEL_OPERATING], [OPERATE_BY_STAFF], [SYSTEM_DATE_TIME], [USERID], [PASSWORD]) VALUES (@Partner, @IPaddress, @Action, @LogDateTime, @WSName, @WSMethod, @RefRow, @TX_ID, @LOG_ID, @VENDOR_ID, @SERVICE_ID, @METHOD, @COUNTER_NO, @TERM_NO, @POS_TAX_ID, @SERVICE_RUN_NO, @RECORD_STATUS, @CLIENT_SERVICE_RUN, @AMOUNT_RECEIVED, @VAT_AMOUNT, @BILL_TYPE, @REFERENCE_1, @REFERENCE_2, @REFERENCE_3, @REFERENCE_4, @CUSTOMER_NAME, @CUSTOMER_ADDR_1, @CUSTOMER_ADDR_2, @CUSTOMER_ADDR_3, @CUSTOMER_TEL_NO, @ZONE, @R_SERVICE_RUNNO, @CANCEL_OPERATING, @OPERATE_BY_STAFF, @SYSTEM_DATE_TIME, @USERID, @PASSWORD);

SELECT SCOPE_IDENTITY();
";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Partner", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, "Partner", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IPaddress", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "IPaddress", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Action", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "Action", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LogDateTime", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "LogDateTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WSName", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, "WSName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WSMethod", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, "WSMethod", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RefRow", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "RefRow", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TX_ID", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "TX_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LOG_ID", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "LOG_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VENDOR_ID", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "VENDOR_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SERVICE_ID", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "SERVICE_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@METHOD", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "METHOD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COUNTER_NO", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "COUNTER_NO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TERM_NO", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "TERM_NO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@POS_TAX_ID", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "POS_TAX_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SERVICE_RUN_NO", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "SERVICE_RUN_NO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RECORD_STATUS", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "RECORD_STATUS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CLIENT_SERVICE_RUN", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "CLIENT_SERVICE_RUN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AMOUNT_RECEIVED", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "AMOUNT_RECEIVED", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VAT_AMOUNT", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "VAT_AMOUNT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BILL_TYPE", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "BILL_TYPE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@REFERENCE_1", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "REFERENCE_1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@REFERENCE_2", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "REFERENCE_2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@REFERENCE_3", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "REFERENCE_3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@REFERENCE_4", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "REFERENCE_4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CUSTOMER_NAME", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER_NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CUSTOMER_ADDR_1", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER_ADDR_1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CUSTOMER_ADDR_2", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER_ADDR_2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CUSTOMER_ADDR_3", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER_ADDR_3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CUSTOMER_TEL_NO", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER_TEL_NO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ZONE", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "ZONE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@R_SERVICE_RUNNO", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "R_SERVICE_RUNNO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CANCEL_OPERATING", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "CANCEL_OPERATING", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OPERATE_BY_STAFF", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "OPERATE_BY_STAFF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SYSTEM_DATE_TIME", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "SYSTEM_DATE_TIME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@USERID", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "USERID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PASSWORD", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "PASSWORD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = @"INSERT INTO [MTL_WSLOG].[dbo].[WSLogForCounterService] ([Partner], [IPaddress], [Action], [LogDateTime], [WSName], [WSMethod], [RefRow], [opTX_ID], [opLOG_ID], [opVENDOR_ID], [opSERVICE_ID], [opMETHOD], [opSUCCESS], [opCODE], [opDESC], [opREFERENCE_1], [opREFERENCE_2], [opREFERENCE_3], [opREFERENCE_4], [opCUSTOMER_NAME], [opCUSTOMER_ADDR_1], [opCUSTOMER_ADDR_2], [opCUSTOMER_ADDR_3], [opCUSTOMER_TEL_NO], [opRETURN1], [opRETURN2], [opRETURN3], [opAMOUNT_RECEIVED], [opPRINT_SLIP]) VALUES (@Partner, @IPaddress, @Action, @LogDateTime, @WSName, @WSMethod, @RefRow, @opTX_ID, @opLOG_ID, @opVENDOR_ID, @opSERVICE_ID, @opMETHOD, @opSUCCESS, @opCODE, @opDESC, @opREFERENCE_1, @opREFERENCE_2, @opREFERENCE_3, @opREFERENCE_4, @opCUSTOMER_NAME, @opCUSTOMER_ADDR_1, @opCUSTOMER_ADDR_2, @opCUSTOMER_ADDR_3, @opCUSTOMER_TEL_NO, @opRETURN1, @opRETURN2, @opRETURN3, @opAMOUNT_RECEIVED, @opPRINT_SLIP);

SELECT SCOPE_IDENTITY();
";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Partner", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, "Partner", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IPaddress", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "IPaddress", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Action", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "Action", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LogDateTime", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "LogDateTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WSName", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, "WSName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WSMethod", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, "WSMethod", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RefRow", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "RefRow", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@opTX_ID", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "opTX_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@opLOG_ID", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "opLOG_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@opVENDOR_ID", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "opVENDOR_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@opSERVICE_ID", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "opSERVICE_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@opMETHOD", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "opMETHOD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@opSUCCESS", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "opSUCCESS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@opCODE", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "opCODE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@opDESC", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "opDESC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@opREFERENCE_1", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "opREFERENCE_1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@opREFERENCE_2", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "opREFERENCE_2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@opREFERENCE_3", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "opREFERENCE_3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@opREFERENCE_4", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "opREFERENCE_4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@opCUSTOMER_NAME", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "opCUSTOMER_NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@opCUSTOMER_ADDR_1", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "opCUSTOMER_ADDR_1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@opCUSTOMER_ADDR_2", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "opCUSTOMER_ADDR_2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@opCUSTOMER_ADDR_3", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "opCUSTOMER_ADDR_3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@opCUSTOMER_TEL_NO", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "opCUSTOMER_TEL_NO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@opRETURN1", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "opRETURN1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@opRETURN2", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "opRETURN2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@opRETURN3", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "opRETURN3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@opAMOUNT_RECEIVED", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "opAMOUNT_RECEIVED", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@opPRINT_SLIP", global::System.Data.SqlDbType.VarChar, 1000, global::System.Data.ParameterDirection.Input, 0, 0, "opPRINT_SLIP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = "INSERT INTO [MTL_WSLOG].[dbo].[WSLogForCounterService] ([Partner], [IPaddress], [" +
                "Action], [LogDateTime], [WSName], [WSMethod], [RefRow], [TX_ID], [LOG_ID], [VEND" +
                "OR_ID], [SERVICE_ID], [METHOD], [COUNTER_NO], [TERM_NO], [POS_TAX_ID], [SERVICE_" +
                "RUN_NO], [RECORD_STATUS], [CLIENT_SERVICE_RUN], [AMOUNT_RECEIVED], [VAT_AMOUNT]," +
                " [BILL_TYPE], [REFERENCE_1], [REFERENCE_2], [REFERENCE_3], [REFERENCE_4], [CUSTO" +
                "MER_NAME], [CUSTOMER_ADDR_1], [CUSTOMER_ADDR_2], [CUSTOMER_ADDR_3], [CUSTOMER_TE" +
                "L_NO], [ZONE], [R_SERVICE_RUNNO], [CANCEL_OPERATING], [OPERATE_BY_STAFF], [SYSTE" +
                "M_DATE_TIME], [USERID], [PASSWORD], [opTX_ID], [opLOG_ID], [opVENDOR_ID], [opSER" +
                "VICE_ID], [opMETHOD], [opSUCCESS], [opCODE], [opDESC], [opREFERENCE_1], [opREFER" +
                "ENCE_2], [opREFERENCE_3], [opREFERENCE_4], [opCUSTOMER_NAME], [opCUSTOMER_ADDR_1" +
                "], [opCUSTOMER_ADDR_2], [opCUSTOMER_ADDR_3], [opCUSTOMER_TEL_NO], [opRETURN1], [" +
                "opRETURN2], [opRETURN3], [opAMOUNT_RECEIVED], [opPRINT_SLIP]) VALUES (@Partner, " +
                "@IPaddress, @Action, @LogDateTime, @WSName, @WSMethod, @RefRow, @TX_ID, @LOG_ID," +
                " @VENDOR_ID, @SERVICE_ID, @METHOD, @COUNTER_NO, @TERM_NO, @POS_TAX_ID, @SERVICE_" +
                "RUN_NO, @RECORD_STATUS, @CLIENT_SERVICE_RUN, @AMOUNT_RECEIVED, @VAT_AMOUNT, @BIL" +
                "L_TYPE, @REFERENCE_1, @REFERENCE_2, @REFERENCE_3, @REFERENCE_4, @CUSTOMER_NAME, " +
                "@CUSTOMER_ADDR_1, @CUSTOMER_ADDR_2, @CUSTOMER_ADDR_3, @CUSTOMER_TEL_NO, @ZONE, @" +
                "R_SERVICE_RUNNO, @CANCEL_OPERATING, @OPERATE_BY_STAFF, @SYSTEM_DATE_TIME, @USERI" +
                "D, @PASSWORD, @opTX_ID, @opLOG_ID, @opVENDOR_ID, @opSERVICE_ID, @opMETHOD, @opSU" +
                "CCESS, @opCODE, @opDESC, @opREFERENCE_1, @opREFERENCE_2, @opREFERENCE_3, @opREFE" +
                "RENCE_4, @opCUSTOMER_NAME, @opCUSTOMER_ADDR_1, @opCUSTOMER_ADDR_2, @opCUSTOMER_A" +
                "DDR_3, @opCUSTOMER_TEL_NO, @opRETURN1, @opRETURN2, @opRETURN3, @opAMOUNT_RECEIVE" +
                "D, @opPRINT_SLIP);\r\n\r\nSELECT SCOPE_IDENTITY();";
            this._commandCollection[3].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Partner", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, "Partner", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IPaddress", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "IPaddress", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Action", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "Action", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LogDateTime", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "LogDateTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WSName", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, "WSName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WSMethod", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, "WSMethod", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RefRow", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "RefRow", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TX_ID", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "TX_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LOG_ID", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "LOG_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VENDOR_ID", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "VENDOR_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SERVICE_ID", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "SERVICE_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@METHOD", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "METHOD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COUNTER_NO", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "COUNTER_NO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TERM_NO", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "TERM_NO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@POS_TAX_ID", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "POS_TAX_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SERVICE_RUN_NO", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "SERVICE_RUN_NO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RECORD_STATUS", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "RECORD_STATUS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CLIENT_SERVICE_RUN", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "CLIENT_SERVICE_RUN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AMOUNT_RECEIVED", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "AMOUNT_RECEIVED", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VAT_AMOUNT", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "VAT_AMOUNT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BILL_TYPE", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "BILL_TYPE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@REFERENCE_1", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "REFERENCE_1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@REFERENCE_2", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "REFERENCE_2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@REFERENCE_3", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "REFERENCE_3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@REFERENCE_4", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "REFERENCE_4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CUSTOMER_NAME", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER_NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CUSTOMER_ADDR_1", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER_ADDR_1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CUSTOMER_ADDR_2", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER_ADDR_2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CUSTOMER_ADDR_3", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER_ADDR_3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CUSTOMER_TEL_NO", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER_TEL_NO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ZONE", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "ZONE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@R_SERVICE_RUNNO", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "R_SERVICE_RUNNO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CANCEL_OPERATING", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "CANCEL_OPERATING", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OPERATE_BY_STAFF", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "OPERATE_BY_STAFF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SYSTEM_DATE_TIME", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "SYSTEM_DATE_TIME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@USERID", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "USERID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PASSWORD", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "PASSWORD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@opTX_ID", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "opTX_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@opLOG_ID", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "opLOG_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@opVENDOR_ID", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "opVENDOR_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@opSERVICE_ID", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "opSERVICE_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@opMETHOD", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "opMETHOD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@opSUCCESS", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "opSUCCESS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@opCODE", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "opCODE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@opDESC", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "opDESC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@opREFERENCE_1", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "opREFERENCE_1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@opREFERENCE_2", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "opREFERENCE_2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@opREFERENCE_3", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "opREFERENCE_3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@opREFERENCE_4", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "opREFERENCE_4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@opCUSTOMER_NAME", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "opCUSTOMER_NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@opCUSTOMER_ADDR_1", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "opCUSTOMER_ADDR_1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@opCUSTOMER_ADDR_2", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "opCUSTOMER_ADDR_2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@opCUSTOMER_ADDR_3", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "opCUSTOMER_ADDR_3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@opCUSTOMER_TEL_NO", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "opCUSTOMER_TEL_NO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@opRETURN1", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "opRETURN1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@opRETURN2", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "opRETURN2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@opRETURN3", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "opRETURN3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@opAMOUNT_RECEIVED", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "opAMOUNT_RECEIVED", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@opPRINT_SLIP", global::System.Data.SqlDbType.VarChar, 1000, global::System.Data.ParameterDirection.Input, 0, 0, "opPRINT_SLIP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(MTL_WSLOG.WSLogForCounterServiceDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual MTL_WSLOG.WSLogForCounterServiceDataTable GetWSLogsForCounterService() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            MTL_WSLOG.WSLogForCounterServiceDataTable dataTable = new MTL_WSLOG.WSLogForCounterServiceDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(MTL_WSLOG.WSLogForCounterServiceDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(MTL_WSLOG dataSet) {
            return this.Adapter.Update(dataSet, "WSLogForCounterService");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_rid) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_rid));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string Partner, 
                    string IPaddress, 
                    string Action, 
                    System.DateTime LogDateTime, 
                    string WSName, 
                    string WSMethod, 
                    global::System.Nullable<int> RefRow, 
                    string TX_ID, 
                    string LOG_ID, 
                    string VENDOR_ID, 
                    string SERVICE_ID, 
                    string METHOD, 
                    string COUNTER_NO, 
                    string TERM_NO, 
                    string POS_TAX_ID, 
                    string SERVICE_RUN_NO, 
                    string RECORD_STATUS, 
                    string CLIENT_SERVICE_RUN, 
                    string AMOUNT_RECEIVED, 
                    string VAT_AMOUNT, 
                    string BILL_TYPE, 
                    string REFERENCE_1, 
                    string REFERENCE_2, 
                    string REFERENCE_3, 
                    string REFERENCE_4, 
                    string CUSTOMER_NAME, 
                    string CUSTOMER_ADDR_1, 
                    string CUSTOMER_ADDR_2, 
                    string CUSTOMER_ADDR_3, 
                    string CUSTOMER_TEL_NO, 
                    string ZONE, 
                    string R_SERVICE_RUNNO, 
                    string CANCEL_OPERATING, 
                    string OPERATE_BY_STAFF, 
                    string SYSTEM_DATE_TIME, 
                    string USERID, 
                    string PASSWORD, 
                    string opTX_ID, 
                    string opLOG_ID, 
                    string opVENDOR_ID, 
                    string opSERVICE_ID, 
                    string opMETHOD, 
                    string opSUCCESS, 
                    string opCODE, 
                    string opDESC, 
                    string opREFERENCE_1, 
                    string opREFERENCE_2, 
                    string opREFERENCE_3, 
                    string opREFERENCE_4, 
                    string opCUSTOMER_NAME, 
                    string opCUSTOMER_ADDR_1, 
                    string opCUSTOMER_ADDR_2, 
                    string opCUSTOMER_ADDR_3, 
                    string opCUSTOMER_TEL_NO, 
                    string opRETURN1, 
                    string opRETURN2, 
                    string opRETURN3, 
                    string opAMOUNT_RECEIVED, 
                    string opPRINT_SLIP) {
            if ((Partner == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Partner));
            }
            if ((IPaddress == null)) {
                throw new global::System.ArgumentNullException("IPaddress");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(IPaddress));
            }
            if ((Action == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Action));
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(LogDateTime));
            if ((WSName == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(WSName));
            }
            if ((WSMethod == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(WSMethod));
            }
            if ((RefRow.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((int)(RefRow.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((TX_ID == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(TX_ID));
            }
            if ((LOG_ID == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(LOG_ID));
            }
            if ((VENDOR_ID == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(VENDOR_ID));
            }
            if ((SERVICE_ID == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(SERVICE_ID));
            }
            if ((METHOD == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(METHOD));
            }
            if ((COUNTER_NO == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(COUNTER_NO));
            }
            if ((TERM_NO == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(TERM_NO));
            }
            if ((POS_TAX_ID == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(POS_TAX_ID));
            }
            if ((SERVICE_RUN_NO == null)) {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(SERVICE_RUN_NO));
            }
            if ((RECORD_STATUS == null)) {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(RECORD_STATUS));
            }
            if ((CLIENT_SERVICE_RUN == null)) {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(CLIENT_SERVICE_RUN));
            }
            if ((AMOUNT_RECEIVED == null)) {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(AMOUNT_RECEIVED));
            }
            if ((VAT_AMOUNT == null)) {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(VAT_AMOUNT));
            }
            if ((BILL_TYPE == null)) {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = ((string)(BILL_TYPE));
            }
            if ((REFERENCE_1 == null)) {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = ((string)(REFERENCE_1));
            }
            if ((REFERENCE_2 == null)) {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = ((string)(REFERENCE_2));
            }
            if ((REFERENCE_3 == null)) {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = ((string)(REFERENCE_3));
            }
            if ((REFERENCE_4 == null)) {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = ((string)(REFERENCE_4));
            }
            if ((CUSTOMER_NAME == null)) {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = ((string)(CUSTOMER_NAME));
            }
            if ((CUSTOMER_ADDR_1 == null)) {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = ((string)(CUSTOMER_ADDR_1));
            }
            if ((CUSTOMER_ADDR_2 == null)) {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = ((string)(CUSTOMER_ADDR_2));
            }
            if ((CUSTOMER_ADDR_3 == null)) {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = ((string)(CUSTOMER_ADDR_3));
            }
            if ((CUSTOMER_TEL_NO == null)) {
                this.Adapter.InsertCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = ((string)(CUSTOMER_TEL_NO));
            }
            if ((ZONE == null)) {
                this.Adapter.InsertCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = ((string)(ZONE));
            }
            if ((R_SERVICE_RUNNO == null)) {
                this.Adapter.InsertCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = ((string)(R_SERVICE_RUNNO));
            }
            if ((CANCEL_OPERATING == null)) {
                this.Adapter.InsertCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = ((string)(CANCEL_OPERATING));
            }
            if ((OPERATE_BY_STAFF == null)) {
                this.Adapter.InsertCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = ((string)(OPERATE_BY_STAFF));
            }
            if ((SYSTEM_DATE_TIME == null)) {
                this.Adapter.InsertCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[34].Value = ((string)(SYSTEM_DATE_TIME));
            }
            if ((USERID == null)) {
                this.Adapter.InsertCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[35].Value = ((string)(USERID));
            }
            if ((PASSWORD == null)) {
                this.Adapter.InsertCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[36].Value = ((string)(PASSWORD));
            }
            if ((opTX_ID == null)) {
                this.Adapter.InsertCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[37].Value = ((string)(opTX_ID));
            }
            if ((opLOG_ID == null)) {
                this.Adapter.InsertCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[38].Value = ((string)(opLOG_ID));
            }
            if ((opVENDOR_ID == null)) {
                this.Adapter.InsertCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[39].Value = ((string)(opVENDOR_ID));
            }
            if ((opSERVICE_ID == null)) {
                this.Adapter.InsertCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[40].Value = ((string)(opSERVICE_ID));
            }
            if ((opMETHOD == null)) {
                this.Adapter.InsertCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[41].Value = ((string)(opMETHOD));
            }
            if ((opSUCCESS == null)) {
                this.Adapter.InsertCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[42].Value = ((string)(opSUCCESS));
            }
            if ((opCODE == null)) {
                this.Adapter.InsertCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[43].Value = ((string)(opCODE));
            }
            if ((opDESC == null)) {
                this.Adapter.InsertCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[44].Value = ((string)(opDESC));
            }
            if ((opREFERENCE_1 == null)) {
                this.Adapter.InsertCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[45].Value = ((string)(opREFERENCE_1));
            }
            if ((opREFERENCE_2 == null)) {
                this.Adapter.InsertCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[46].Value = ((string)(opREFERENCE_2));
            }
            if ((opREFERENCE_3 == null)) {
                this.Adapter.InsertCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[47].Value = ((string)(opREFERENCE_3));
            }
            if ((opREFERENCE_4 == null)) {
                this.Adapter.InsertCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[48].Value = ((string)(opREFERENCE_4));
            }
            if ((opCUSTOMER_NAME == null)) {
                this.Adapter.InsertCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[49].Value = ((string)(opCUSTOMER_NAME));
            }
            if ((opCUSTOMER_ADDR_1 == null)) {
                this.Adapter.InsertCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[50].Value = ((string)(opCUSTOMER_ADDR_1));
            }
            if ((opCUSTOMER_ADDR_2 == null)) {
                this.Adapter.InsertCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[51].Value = ((string)(opCUSTOMER_ADDR_2));
            }
            if ((opCUSTOMER_ADDR_3 == null)) {
                this.Adapter.InsertCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[52].Value = ((string)(opCUSTOMER_ADDR_3));
            }
            if ((opCUSTOMER_TEL_NO == null)) {
                this.Adapter.InsertCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[53].Value = ((string)(opCUSTOMER_TEL_NO));
            }
            if ((opRETURN1 == null)) {
                this.Adapter.InsertCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[54].Value = ((string)(opRETURN1));
            }
            if ((opRETURN2 == null)) {
                this.Adapter.InsertCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[55].Value = ((string)(opRETURN2));
            }
            if ((opRETURN3 == null)) {
                this.Adapter.InsertCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[56].Value = ((string)(opRETURN3));
            }
            if ((opAMOUNT_RECEIVED == null)) {
                this.Adapter.InsertCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[57].Value = ((string)(opAMOUNT_RECEIVED));
            }
            if ((opPRINT_SLIP == null)) {
                this.Adapter.InsertCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[58].Value = ((string)(opPRINT_SLIP));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string Partner, 
                    string IPaddress, 
                    string Action, 
                    System.DateTime LogDateTime, 
                    string WSName, 
                    string WSMethod, 
                    global::System.Nullable<int> RefRow, 
                    string TX_ID, 
                    string LOG_ID, 
                    string VENDOR_ID, 
                    string SERVICE_ID, 
                    string METHOD, 
                    string COUNTER_NO, 
                    string TERM_NO, 
                    string POS_TAX_ID, 
                    string SERVICE_RUN_NO, 
                    string RECORD_STATUS, 
                    string CLIENT_SERVICE_RUN, 
                    string AMOUNT_RECEIVED, 
                    string VAT_AMOUNT, 
                    string BILL_TYPE, 
                    string REFERENCE_1, 
                    string REFERENCE_2, 
                    string REFERENCE_3, 
                    string REFERENCE_4, 
                    string CUSTOMER_NAME, 
                    string CUSTOMER_ADDR_1, 
                    string CUSTOMER_ADDR_2, 
                    string CUSTOMER_ADDR_3, 
                    string CUSTOMER_TEL_NO, 
                    string ZONE, 
                    string R_SERVICE_RUNNO, 
                    string CANCEL_OPERATING, 
                    string OPERATE_BY_STAFF, 
                    string SYSTEM_DATE_TIME, 
                    string USERID, 
                    string PASSWORD, 
                    string opTX_ID, 
                    string opLOG_ID, 
                    string opVENDOR_ID, 
                    string opSERVICE_ID, 
                    string opMETHOD, 
                    string opSUCCESS, 
                    string opCODE, 
                    string opDESC, 
                    string opREFERENCE_1, 
                    string opREFERENCE_2, 
                    string opREFERENCE_3, 
                    string opREFERENCE_4, 
                    string opCUSTOMER_NAME, 
                    string opCUSTOMER_ADDR_1, 
                    string opCUSTOMER_ADDR_2, 
                    string opCUSTOMER_ADDR_3, 
                    string opCUSTOMER_TEL_NO, 
                    string opRETURN1, 
                    string opRETURN2, 
                    string opRETURN3, 
                    string opAMOUNT_RECEIVED, 
                    string opPRINT_SLIP, 
                    int Original_rid) {
            if ((Partner == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Partner));
            }
            if ((IPaddress == null)) {
                throw new global::System.ArgumentNullException("IPaddress");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(IPaddress));
            }
            if ((Action == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Action));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(LogDateTime));
            if ((WSName == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(WSName));
            }
            if ((WSMethod == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(WSMethod));
            }
            if ((RefRow.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(RefRow.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((TX_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(TX_ID));
            }
            if ((LOG_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(LOG_ID));
            }
            if ((VENDOR_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(VENDOR_ID));
            }
            if ((SERVICE_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(SERVICE_ID));
            }
            if ((METHOD == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(METHOD));
            }
            if ((COUNTER_NO == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(COUNTER_NO));
            }
            if ((TERM_NO == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(TERM_NO));
            }
            if ((POS_TAX_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(POS_TAX_ID));
            }
            if ((SERVICE_RUN_NO == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(SERVICE_RUN_NO));
            }
            if ((RECORD_STATUS == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(RECORD_STATUS));
            }
            if ((CLIENT_SERVICE_RUN == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(CLIENT_SERVICE_RUN));
            }
            if ((AMOUNT_RECEIVED == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(AMOUNT_RECEIVED));
            }
            if ((VAT_AMOUNT == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(VAT_AMOUNT));
            }
            if ((BILL_TYPE == null)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(BILL_TYPE));
            }
            if ((REFERENCE_1 == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(REFERENCE_1));
            }
            if ((REFERENCE_2 == null)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(REFERENCE_2));
            }
            if ((REFERENCE_3 == null)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(REFERENCE_3));
            }
            if ((REFERENCE_4 == null)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(REFERENCE_4));
            }
            if ((CUSTOMER_NAME == null)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(CUSTOMER_NAME));
            }
            if ((CUSTOMER_ADDR_1 == null)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(CUSTOMER_ADDR_1));
            }
            if ((CUSTOMER_ADDR_2 == null)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(CUSTOMER_ADDR_2));
            }
            if ((CUSTOMER_ADDR_3 == null)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(CUSTOMER_ADDR_3));
            }
            if ((CUSTOMER_TEL_NO == null)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(CUSTOMER_TEL_NO));
            }
            if ((ZONE == null)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(ZONE));
            }
            if ((R_SERVICE_RUNNO == null)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(R_SERVICE_RUNNO));
            }
            if ((CANCEL_OPERATING == null)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(CANCEL_OPERATING));
            }
            if ((OPERATE_BY_STAFF == null)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(OPERATE_BY_STAFF));
            }
            if ((SYSTEM_DATE_TIME == null)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(SYSTEM_DATE_TIME));
            }
            if ((USERID == null)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((string)(USERID));
            }
            if ((PASSWORD == null)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((string)(PASSWORD));
            }
            if ((opTX_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((string)(opTX_ID));
            }
            if ((opLOG_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((string)(opLOG_ID));
            }
            if ((opVENDOR_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((string)(opVENDOR_ID));
            }
            if ((opSERVICE_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((string)(opSERVICE_ID));
            }
            if ((opMETHOD == null)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((string)(opMETHOD));
            }
            if ((opSUCCESS == null)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((string)(opSUCCESS));
            }
            if ((opCODE == null)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((string)(opCODE));
            }
            if ((opDESC == null)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((string)(opDESC));
            }
            if ((opREFERENCE_1 == null)) {
                this.Adapter.UpdateCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((string)(opREFERENCE_1));
            }
            if ((opREFERENCE_2 == null)) {
                this.Adapter.UpdateCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((string)(opREFERENCE_2));
            }
            if ((opREFERENCE_3 == null)) {
                this.Adapter.UpdateCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((string)(opREFERENCE_3));
            }
            if ((opREFERENCE_4 == null)) {
                this.Adapter.UpdateCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((string)(opREFERENCE_4));
            }
            if ((opCUSTOMER_NAME == null)) {
                this.Adapter.UpdateCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((string)(opCUSTOMER_NAME));
            }
            if ((opCUSTOMER_ADDR_1 == null)) {
                this.Adapter.UpdateCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((string)(opCUSTOMER_ADDR_1));
            }
            if ((opCUSTOMER_ADDR_2 == null)) {
                this.Adapter.UpdateCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((string)(opCUSTOMER_ADDR_2));
            }
            if ((opCUSTOMER_ADDR_3 == null)) {
                this.Adapter.UpdateCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((string)(opCUSTOMER_ADDR_3));
            }
            if ((opCUSTOMER_TEL_NO == null)) {
                this.Adapter.UpdateCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((string)(opCUSTOMER_TEL_NO));
            }
            if ((opRETURN1 == null)) {
                this.Adapter.UpdateCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((string)(opRETURN1));
            }
            if ((opRETURN2 == null)) {
                this.Adapter.UpdateCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((string)(opRETURN2));
            }
            if ((opRETURN3 == null)) {
                this.Adapter.UpdateCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((string)(opRETURN3));
            }
            if ((opAMOUNT_RECEIVED == null)) {
                this.Adapter.UpdateCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((string)(opAMOUNT_RECEIVED));
            }
            if ((opPRINT_SLIP == null)) {
                this.Adapter.UpdateCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((string)(opPRINT_SLIP));
            }
            this.Adapter.UpdateCommand.Parameters[59].Value = ((int)(Original_rid));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, false)]
        public virtual int InsertRequester(
                    string Partner, 
                    string IPaddress, 
                    string Action, 
                    System.DateTime LogDateTime, 
                    string WSName, 
                    string WSMethod, 
                    global::System.Nullable<int> RefRow, 
                    string TX_ID, 
                    string LOG_ID, 
                    string VENDOR_ID, 
                    string SERVICE_ID, 
                    string METHOD, 
                    string COUNTER_NO, 
                    string TERM_NO, 
                    string POS_TAX_ID, 
                    string SERVICE_RUN_NO, 
                    string RECORD_STATUS, 
                    string CLIENT_SERVICE_RUN, 
                    string AMOUNT_RECEIVED, 
                    string VAT_AMOUNT, 
                    string BILL_TYPE, 
                    string REFERENCE_1, 
                    string REFERENCE_2, 
                    string REFERENCE_3, 
                    string REFERENCE_4, 
                    string CUSTOMER_NAME, 
                    string CUSTOMER_ADDR_1, 
                    string CUSTOMER_ADDR_2, 
                    string CUSTOMER_ADDR_3, 
                    string CUSTOMER_TEL_NO, 
                    string ZONE, 
                    string R_SERVICE_RUNNO, 
                    string CANCEL_OPERATING, 
                    string OPERATE_BY_STAFF, 
                    string SYSTEM_DATE_TIME, 
                    string USERID, 
                    string PASSWORD) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[1];
            if ((Partner == null)) {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[0].Value = ((string)(Partner));
            }
            if ((IPaddress == null)) {
                throw new global::System.ArgumentNullException("IPaddress");
            }
            else {
                command.Parameters[1].Value = ((string)(IPaddress));
            }
            if ((Action == null)) {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[2].Value = ((string)(Action));
            }
            command.Parameters[3].Value = ((System.DateTime)(LogDateTime));
            if ((WSName == null)) {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[4].Value = ((string)(WSName));
            }
            if ((WSMethod == null)) {
                command.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[5].Value = ((string)(WSMethod));
            }
            if ((RefRow.HasValue == true)) {
                command.Parameters[6].Value = ((int)(RefRow.Value));
            }
            else {
                command.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((TX_ID == null)) {
                command.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[7].Value = ((string)(TX_ID));
            }
            if ((LOG_ID == null)) {
                command.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[8].Value = ((string)(LOG_ID));
            }
            if ((VENDOR_ID == null)) {
                command.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[9].Value = ((string)(VENDOR_ID));
            }
            if ((SERVICE_ID == null)) {
                command.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[10].Value = ((string)(SERVICE_ID));
            }
            if ((METHOD == null)) {
                command.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[11].Value = ((string)(METHOD));
            }
            if ((COUNTER_NO == null)) {
                command.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[12].Value = ((string)(COUNTER_NO));
            }
            if ((TERM_NO == null)) {
                command.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[13].Value = ((string)(TERM_NO));
            }
            if ((POS_TAX_ID == null)) {
                command.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[14].Value = ((string)(POS_TAX_ID));
            }
            if ((SERVICE_RUN_NO == null)) {
                command.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[15].Value = ((string)(SERVICE_RUN_NO));
            }
            if ((RECORD_STATUS == null)) {
                command.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[16].Value = ((string)(RECORD_STATUS));
            }
            if ((CLIENT_SERVICE_RUN == null)) {
                command.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[17].Value = ((string)(CLIENT_SERVICE_RUN));
            }
            if ((AMOUNT_RECEIVED == null)) {
                command.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[18].Value = ((string)(AMOUNT_RECEIVED));
            }
            if ((VAT_AMOUNT == null)) {
                command.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[19].Value = ((string)(VAT_AMOUNT));
            }
            if ((BILL_TYPE == null)) {
                command.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[20].Value = ((string)(BILL_TYPE));
            }
            if ((REFERENCE_1 == null)) {
                command.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[21].Value = ((string)(REFERENCE_1));
            }
            if ((REFERENCE_2 == null)) {
                command.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[22].Value = ((string)(REFERENCE_2));
            }
            if ((REFERENCE_3 == null)) {
                command.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[23].Value = ((string)(REFERENCE_3));
            }
            if ((REFERENCE_4 == null)) {
                command.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[24].Value = ((string)(REFERENCE_4));
            }
            if ((CUSTOMER_NAME == null)) {
                command.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[25].Value = ((string)(CUSTOMER_NAME));
            }
            if ((CUSTOMER_ADDR_1 == null)) {
                command.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[26].Value = ((string)(CUSTOMER_ADDR_1));
            }
            if ((CUSTOMER_ADDR_2 == null)) {
                command.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[27].Value = ((string)(CUSTOMER_ADDR_2));
            }
            if ((CUSTOMER_ADDR_3 == null)) {
                command.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[28].Value = ((string)(CUSTOMER_ADDR_3));
            }
            if ((CUSTOMER_TEL_NO == null)) {
                command.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[29].Value = ((string)(CUSTOMER_TEL_NO));
            }
            if ((ZONE == null)) {
                command.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[30].Value = ((string)(ZONE));
            }
            if ((R_SERVICE_RUNNO == null)) {
                command.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[31].Value = ((string)(R_SERVICE_RUNNO));
            }
            if ((CANCEL_OPERATING == null)) {
                command.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[32].Value = ((string)(CANCEL_OPERATING));
            }
            if ((OPERATE_BY_STAFF == null)) {
                command.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[33].Value = ((string)(OPERATE_BY_STAFF));
            }
            if ((SYSTEM_DATE_TIME == null)) {
                command.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[34].Value = ((string)(SYSTEM_DATE_TIME));
            }
            if ((USERID == null)) {
                command.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[35].Value = ((string)(USERID));
            }
            if ((PASSWORD == null)) {
                command.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[36].Value = ((string)(PASSWORD));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, false)]
        public virtual int InsertResponse(
                    string Partner, 
                    string IPaddress, 
                    string Action, 
                    System.DateTime LogDateTime, 
                    string WSName, 
                    string WSMethod, 
                    global::System.Nullable<int> RefRow, 
                    string opTX_ID, 
                    string opLOG_ID, 
                    string opVENDOR_ID, 
                    string opSERVICE_ID, 
                    string opMETHOD, 
                    string opSUCCESS, 
                    string opCODE, 
                    string opDESC, 
                    string opREFERENCE_1, 
                    string opREFERENCE_2, 
                    string opREFERENCE_3, 
                    string opREFERENCE_4, 
                    string opCUSTOMER_NAME, 
                    string opCUSTOMER_ADDR_1, 
                    string opCUSTOMER_ADDR_2, 
                    string opCUSTOMER_ADDR_3, 
                    string opCUSTOMER_TEL_NO, 
                    string opRETURN1, 
                    string opRETURN2, 
                    string opRETURN3, 
                    string opAMOUNT_RECEIVED, 
                    string opPRINT_SLIP) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[2];
            if ((Partner == null)) {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[0].Value = ((string)(Partner));
            }
            if ((IPaddress == null)) {
                throw new global::System.ArgumentNullException("IPaddress");
            }
            else {
                command.Parameters[1].Value = ((string)(IPaddress));
            }
            if ((Action == null)) {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[2].Value = ((string)(Action));
            }
            command.Parameters[3].Value = ((System.DateTime)(LogDateTime));
            if ((WSName == null)) {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[4].Value = ((string)(WSName));
            }
            if ((WSMethod == null)) {
                command.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[5].Value = ((string)(WSMethod));
            }
            if ((RefRow.HasValue == true)) {
                command.Parameters[6].Value = ((int)(RefRow.Value));
            }
            else {
                command.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((opTX_ID == null)) {
                command.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[7].Value = ((string)(opTX_ID));
            }
            if ((opLOG_ID == null)) {
                command.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[8].Value = ((string)(opLOG_ID));
            }
            if ((opVENDOR_ID == null)) {
                command.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[9].Value = ((string)(opVENDOR_ID));
            }
            if ((opSERVICE_ID == null)) {
                command.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[10].Value = ((string)(opSERVICE_ID));
            }
            if ((opMETHOD == null)) {
                command.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[11].Value = ((string)(opMETHOD));
            }
            if ((opSUCCESS == null)) {
                command.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[12].Value = ((string)(opSUCCESS));
            }
            if ((opCODE == null)) {
                command.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[13].Value = ((string)(opCODE));
            }
            if ((opDESC == null)) {
                command.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[14].Value = ((string)(opDESC));
            }
            if ((opREFERENCE_1 == null)) {
                command.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[15].Value = ((string)(opREFERENCE_1));
            }
            if ((opREFERENCE_2 == null)) {
                command.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[16].Value = ((string)(opREFERENCE_2));
            }
            if ((opREFERENCE_3 == null)) {
                command.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[17].Value = ((string)(opREFERENCE_3));
            }
            if ((opREFERENCE_4 == null)) {
                command.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[18].Value = ((string)(opREFERENCE_4));
            }
            if ((opCUSTOMER_NAME == null)) {
                command.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[19].Value = ((string)(opCUSTOMER_NAME));
            }
            if ((opCUSTOMER_ADDR_1 == null)) {
                command.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[20].Value = ((string)(opCUSTOMER_ADDR_1));
            }
            if ((opCUSTOMER_ADDR_2 == null)) {
                command.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[21].Value = ((string)(opCUSTOMER_ADDR_2));
            }
            if ((opCUSTOMER_ADDR_3 == null)) {
                command.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[22].Value = ((string)(opCUSTOMER_ADDR_3));
            }
            if ((opCUSTOMER_TEL_NO == null)) {
                command.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[23].Value = ((string)(opCUSTOMER_TEL_NO));
            }
            if ((opRETURN1 == null)) {
                command.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[24].Value = ((string)(opRETURN1));
            }
            if ((opRETURN2 == null)) {
                command.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[25].Value = ((string)(opRETURN2));
            }
            if ((opRETURN3 == null)) {
                command.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[26].Value = ((string)(opRETURN3));
            }
            if ((opAMOUNT_RECEIVED == null)) {
                command.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[27].Value = ((string)(opAMOUNT_RECEIVED));
            }
            if ((opPRINT_SLIP == null)) {
                command.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[28].Value = ((string)(opPRINT_SLIP));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, false)]
        public virtual int InsertWSLogForCounterService(
                    string Partner, 
                    string IPaddress, 
                    string Action, 
                    System.DateTime LogDateTime, 
                    string WSName, 
                    string WSMethod, 
                    global::System.Nullable<int> RefRow, 
                    string TX_ID, 
                    string LOG_ID, 
                    string VENDOR_ID, 
                    string SERVICE_ID, 
                    string METHOD, 
                    string COUNTER_NO, 
                    string TERM_NO, 
                    string POS_TAX_ID, 
                    string SERVICE_RUN_NO, 
                    string RECORD_STATUS, 
                    string CLIENT_SERVICE_RUN, 
                    string AMOUNT_RECEIVED, 
                    string VAT_AMOUNT, 
                    string BILL_TYPE, 
                    string REFERENCE_1, 
                    string REFERENCE_2, 
                    string REFERENCE_3, 
                    string REFERENCE_4, 
                    string CUSTOMER_NAME, 
                    string CUSTOMER_ADDR_1, 
                    string CUSTOMER_ADDR_2, 
                    string CUSTOMER_ADDR_3, 
                    string CUSTOMER_TEL_NO, 
                    string ZONE, 
                    string R_SERVICE_RUNNO, 
                    string CANCEL_OPERATING, 
                    string OPERATE_BY_STAFF, 
                    string SYSTEM_DATE_TIME, 
                    string USERID, 
                    string PASSWORD, 
                    string opTX_ID, 
                    string opLOG_ID, 
                    string opVENDOR_ID, 
                    string opSERVICE_ID, 
                    string opMETHOD, 
                    string opSUCCESS, 
                    string opCODE, 
                    string opDESC, 
                    string opREFERENCE_1, 
                    string opREFERENCE_2, 
                    string opREFERENCE_3, 
                    string opREFERENCE_4, 
                    string opCUSTOMER_NAME, 
                    string opCUSTOMER_ADDR_1, 
                    string opCUSTOMER_ADDR_2, 
                    string opCUSTOMER_ADDR_3, 
                    string opCUSTOMER_TEL_NO, 
                    string opRETURN1, 
                    string opRETURN2, 
                    string opRETURN3, 
                    string opAMOUNT_RECEIVED, 
                    string opPRINT_SLIP) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[3];
            if ((Partner == null)) {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[0].Value = ((string)(Partner));
            }
            if ((IPaddress == null)) {
                throw new global::System.ArgumentNullException("IPaddress");
            }
            else {
                command.Parameters[1].Value = ((string)(IPaddress));
            }
            if ((Action == null)) {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[2].Value = ((string)(Action));
            }
            command.Parameters[3].Value = ((System.DateTime)(LogDateTime));
            if ((WSName == null)) {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[4].Value = ((string)(WSName));
            }
            if ((WSMethod == null)) {
                command.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[5].Value = ((string)(WSMethod));
            }
            if ((RefRow.HasValue == true)) {
                command.Parameters[6].Value = ((int)(RefRow.Value));
            }
            else {
                command.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((TX_ID == null)) {
                command.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[7].Value = ((string)(TX_ID));
            }
            if ((LOG_ID == null)) {
                command.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[8].Value = ((string)(LOG_ID));
            }
            if ((VENDOR_ID == null)) {
                command.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[9].Value = ((string)(VENDOR_ID));
            }
            if ((SERVICE_ID == null)) {
                command.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[10].Value = ((string)(SERVICE_ID));
            }
            if ((METHOD == null)) {
                command.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[11].Value = ((string)(METHOD));
            }
            if ((COUNTER_NO == null)) {
                command.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[12].Value = ((string)(COUNTER_NO));
            }
            if ((TERM_NO == null)) {
                command.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[13].Value = ((string)(TERM_NO));
            }
            if ((POS_TAX_ID == null)) {
                command.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[14].Value = ((string)(POS_TAX_ID));
            }
            if ((SERVICE_RUN_NO == null)) {
                command.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[15].Value = ((string)(SERVICE_RUN_NO));
            }
            if ((RECORD_STATUS == null)) {
                command.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[16].Value = ((string)(RECORD_STATUS));
            }
            if ((CLIENT_SERVICE_RUN == null)) {
                command.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[17].Value = ((string)(CLIENT_SERVICE_RUN));
            }
            if ((AMOUNT_RECEIVED == null)) {
                command.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[18].Value = ((string)(AMOUNT_RECEIVED));
            }
            if ((VAT_AMOUNT == null)) {
                command.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[19].Value = ((string)(VAT_AMOUNT));
            }
            if ((BILL_TYPE == null)) {
                command.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[20].Value = ((string)(BILL_TYPE));
            }
            if ((REFERENCE_1 == null)) {
                command.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[21].Value = ((string)(REFERENCE_1));
            }
            if ((REFERENCE_2 == null)) {
                command.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[22].Value = ((string)(REFERENCE_2));
            }
            if ((REFERENCE_3 == null)) {
                command.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[23].Value = ((string)(REFERENCE_3));
            }
            if ((REFERENCE_4 == null)) {
                command.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[24].Value = ((string)(REFERENCE_4));
            }
            if ((CUSTOMER_NAME == null)) {
                command.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[25].Value = ((string)(CUSTOMER_NAME));
            }
            if ((CUSTOMER_ADDR_1 == null)) {
                command.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[26].Value = ((string)(CUSTOMER_ADDR_1));
            }
            if ((CUSTOMER_ADDR_2 == null)) {
                command.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[27].Value = ((string)(CUSTOMER_ADDR_2));
            }
            if ((CUSTOMER_ADDR_3 == null)) {
                command.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[28].Value = ((string)(CUSTOMER_ADDR_3));
            }
            if ((CUSTOMER_TEL_NO == null)) {
                command.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[29].Value = ((string)(CUSTOMER_TEL_NO));
            }
            if ((ZONE == null)) {
                command.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[30].Value = ((string)(ZONE));
            }
            if ((R_SERVICE_RUNNO == null)) {
                command.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[31].Value = ((string)(R_SERVICE_RUNNO));
            }
            if ((CANCEL_OPERATING == null)) {
                command.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[32].Value = ((string)(CANCEL_OPERATING));
            }
            if ((OPERATE_BY_STAFF == null)) {
                command.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[33].Value = ((string)(OPERATE_BY_STAFF));
            }
            if ((SYSTEM_DATE_TIME == null)) {
                command.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[34].Value = ((string)(SYSTEM_DATE_TIME));
            }
            if ((USERID == null)) {
                command.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[35].Value = ((string)(USERID));
            }
            if ((PASSWORD == null)) {
                command.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[36].Value = ((string)(PASSWORD));
            }
            if ((opTX_ID == null)) {
                command.Parameters[37].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[37].Value = ((string)(opTX_ID));
            }
            if ((opLOG_ID == null)) {
                command.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[38].Value = ((string)(opLOG_ID));
            }
            if ((opVENDOR_ID == null)) {
                command.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[39].Value = ((string)(opVENDOR_ID));
            }
            if ((opSERVICE_ID == null)) {
                command.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[40].Value = ((string)(opSERVICE_ID));
            }
            if ((opMETHOD == null)) {
                command.Parameters[41].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[41].Value = ((string)(opMETHOD));
            }
            if ((opSUCCESS == null)) {
                command.Parameters[42].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[42].Value = ((string)(opSUCCESS));
            }
            if ((opCODE == null)) {
                command.Parameters[43].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[43].Value = ((string)(opCODE));
            }
            if ((opDESC == null)) {
                command.Parameters[44].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[44].Value = ((string)(opDESC));
            }
            if ((opREFERENCE_1 == null)) {
                command.Parameters[45].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[45].Value = ((string)(opREFERENCE_1));
            }
            if ((opREFERENCE_2 == null)) {
                command.Parameters[46].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[46].Value = ((string)(opREFERENCE_2));
            }
            if ((opREFERENCE_3 == null)) {
                command.Parameters[47].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[47].Value = ((string)(opREFERENCE_3));
            }
            if ((opREFERENCE_4 == null)) {
                command.Parameters[48].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[48].Value = ((string)(opREFERENCE_4));
            }
            if ((opCUSTOMER_NAME == null)) {
                command.Parameters[49].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[49].Value = ((string)(opCUSTOMER_NAME));
            }
            if ((opCUSTOMER_ADDR_1 == null)) {
                command.Parameters[50].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[50].Value = ((string)(opCUSTOMER_ADDR_1));
            }
            if ((opCUSTOMER_ADDR_2 == null)) {
                command.Parameters[51].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[51].Value = ((string)(opCUSTOMER_ADDR_2));
            }
            if ((opCUSTOMER_ADDR_3 == null)) {
                command.Parameters[52].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[52].Value = ((string)(opCUSTOMER_ADDR_3));
            }
            if ((opCUSTOMER_TEL_NO == null)) {
                command.Parameters[53].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[53].Value = ((string)(opCUSTOMER_TEL_NO));
            }
            if ((opRETURN1 == null)) {
                command.Parameters[54].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[54].Value = ((string)(opRETURN1));
            }
            if ((opRETURN2 == null)) {
                command.Parameters[55].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[55].Value = ((string)(opRETURN2));
            }
            if ((opRETURN3 == null)) {
                command.Parameters[56].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[56].Value = ((string)(opRETURN3));
            }
            if ((opAMOUNT_RECEIVED == null)) {
                command.Parameters[57].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[57].Value = ((string)(opAMOUNT_RECEIVED));
            }
            if ((opPRINT_SLIP == null)) {
                command.Parameters[58].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[58].Value = ((string)(opPRINT_SLIP));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
    }
}

#pragma warning restore 1591